{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VICTUS\\\\OneDrive\\\\Desktop\\\\Nexus blood_care\\\\frontend\\\\src\\\\Component\\\\user\\\\PreimumDonor.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PremiumDonorDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [donorDetails, setDonorDetails] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchDonorDetails = async () => {\n      // Check if id is undefined\n      if (!id) {\n        setError('Donor ID is not provided');\n        setLoading(false);\n        return;\n      }\n      try {\n        const response = await fetch(`http://localhost:5000/api/donors/${id}`);\n        if (!response.ok) {\n          throw new Error('Failed to fetch donor details');\n        }\n        const data = await response.json();\n        setDonorDetails(data);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setLoading(false);\n      }\n    };\n\n    // Fetch donor details based on the ID from your API or server\n    fetchDonorDetails();\n  }, [id]); // Dependency on 'id' ensures useEffect runs when the ID changes\n\n  if (!id) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Error: Donor ID is not provided\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this);\n  }\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Donor Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ID: \", donorDetails.premium_donor_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"First Name: \", donorDetails.first_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Last Name: \", donorDetails.last_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", donorDetails.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n_s(PremiumDonorDetails, \"5R9VvGVk/XrQ5b6tl4KwrY/ywGQ=\", false, function () {\n  return [useParams];\n});\n_c = PremiumDonorDetails;\nexport default PremiumDonorDetails;\nvar _c;\n$RefreshReg$(_c, \"PremiumDonorDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","PremiumDonorDetails","_s","id","donorDetails","setDonorDetails","loading","setLoading","error","setError","fetchDonorDetails","response","fetch","ok","Error","data","json","message","children","fileName","_jsxFileName","lineNumber","columnNumber","premium_donor_id","first_name","last_name","email","_c","$RefreshReg$"],"sources":["C:/Users/VICTUS/OneDrive/Desktop/Nexus blood_care/frontend/src/Component/user/PreimumDonor.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst PremiumDonorDetails = () => {\r\n  const { id } = useParams();\r\n  const [donorDetails, setDonorDetails] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchDonorDetails = async () => {\r\n      // Check if id is undefined\r\n      if (!id) {\r\n        setError('Donor ID is not provided');\r\n        setLoading(false);\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const response = await fetch(`http://localhost:5000/api/donors/${id}`);\r\n        if (!response.ok) {\r\n          throw new Error('Failed to fetch donor details');\r\n        }\r\n        const data = await response.json();\r\n        setDonorDetails(data);\r\n      } catch (error) {\r\n        setError(error.message);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    // Fetch donor details based on the ID from your API or server\r\n    fetchDonorDetails();\r\n  }, [id]); // Dependency on 'id' ensures useEffect runs when the ID changes\r\n\r\n  if (!id) {\r\n    return <p>Error: Donor ID is not provided</p>;\r\n  }\r\n\r\n  if (loading) {\r\n    return <p>Loading...</p>;\r\n  }\r\n\r\n  if (error) {\r\n    return <p>Error: {error}</p>;\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Donor Details</h2>\r\n      <p>ID: {donorDetails.premium_donor_id}</p>\r\n      <p>First Name: {donorDetails.first_name}</p>\r\n      <p>Last Name: {donorDetails.last_name}</p>\r\n      <p>Email: {donorDetails.email}</p>\r\n      {/* Add more details based on your premium donor data */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PremiumDonorDetails;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}