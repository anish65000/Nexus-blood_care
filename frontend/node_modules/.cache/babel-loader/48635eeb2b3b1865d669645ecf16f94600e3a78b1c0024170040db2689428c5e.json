{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n// import { ToastContainer, toast } from 'react-toastify';\n// import 'react-toastify/dist/ReactToastify.css';\n\n// function BloodBankManagement() {\n//   const [bloodBanks, setBloodBanks] = useState([]);\n//   const [editableBloodBanks, setEditableBloodBanks] = useState({});\n\n//   useEffect(() => {\n//     fetchBloodBanks();\n//   }, []);\n\n//   const fetchBloodBanks = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/bloodbanks');\n//       setBloodBanks(response.data);\n//       // Initialize editableBloodBanks state based on the fetched blood banks\n//       const initialEditableState = {};\n//       response.data.forEach((bloodBank) => {\n//         initialEditableState[bloodBank.id] = false;\n//       });\n//       setEditableBloodBanks(initialEditableState);\n//     } catch (error) {\n//       console.error('Error fetching blood banks:', error);\n//     }\n//   };\n\n//   const handleUpdateBloodBank = async (bloodBankId, updatedData) => {\n//     try {\n//       // Construct the updated data object\n//       const updatedBloodBank = {\n//         name: updatedData.name,\n//         category: updatedData.category,\n//         phone: updatedData.phone,\n//         district: updatedData.district,\n//         email: updatedData.email,\n//         address: updatedData.address,\n//         latitude: updatedData.latitude,\n//         longitude: updatedData.longitude,\n//       };\n//       await axios.put(`http://localhost:5000/update/bloodbank/${bloodBankId}`, updatedBloodBank);\n//       toast.success('Blood bank updated successfully');\n//       fetchBloodBanks(); // Refresh blood bank list\n//       setEditableBloodBanks({ ...editableBloodBanks, [bloodBankId]: false }); // Exit edit mode\n//     } catch (error) {\n//       console.error('Error updating blood bank:', error);\n//       toast.error('Failed to update blood bank');\n//     }\n//   };\n\n//   const handleEditClick = (bloodBankId) => {\n//     setEditableBloodBanks({ ...editableBloodBanks, [bloodBankId]: true });\n//   };\n\n//   const handleCancelEdit = (bloodBankId) => {\n//     setEditableBloodBanks({ ...editableBloodBanks, [bloodBankId]: false });\n//   };\n\n//   const handleInputChange = (event, field, bloodBankId) => {\n//     const updatedData = {\n//       ...bloodBanks.find((bloodBank) => bloodBank.id === bloodBankId),\n//       [field]: event.target.value,\n//     };\n//     setBloodBanks(\n//       bloodBanks.map((bloodBank) =>\n//         bloodBank.id === bloodBankId ? updatedData : bloodBank\n//       )\n//     );\n//   };\n\n//   const handleDeleteBloodBank = async (bloodBankId) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/bloodbank/${bloodBankId}`);\n//       toast.success('Blood bank deleted successfully');\n//       fetchBloodBanks(); // Refresh blood bank list\n//     } catch (error) {\n//       console.error('Error deleting blood bank:', error);\n//       toast.error('Failed to delete blood bank');\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mx-auto bg-gray-100 p-8\">\n//       <h1 className=\"text-4xl font-bold mt-5 mb-8 text-center text-red-600\">Blood Banks</h1>\n//       <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\n//         {bloodBanks.map((bloodBank) => (\n//           <div key={bloodBank.id} className=\"border p-6 bg-green rounded-lg shadow-md\">\n//             <p className=\"mb-4\">\n//               <strong className=\"text-gray-600\">Name: </strong>\n//               {editableBloodBanks[bloodBank.id] ? (\n//                 <input\n//                   type=\"text\"\n//                   value={bloodBank.name}\n//                   onChange={(e) => handleInputChange(e, 'name', bloodBank.id)}\n//                   className=\"w-full border rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-600\"\n//                 />\n//               ) : (\n//                 <span className=\"text-gray-800\">{bloodBank.name}</span>\n//               )}\n//             </p>\n//           {/* Display blood bank details similar to the donation component */}\n// <p className=\"mb-4\">\n//   <strong className=\"text-gray-600\">Category: </strong>\n//   {editableBloodBanks[bloodBank.id] ? (\n//     <input\n//       type=\"text\"\n//       value={bloodBank.category}\n//       onChange={(e) => handleInputChange(e, 'category', bloodBank.id)}\n//       className=\"w-full border rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-600\"\n//     />\n//   ) : (\n//     <span className=\"text-gray-800\">{bloodBank.category}</span>\n//   )}\n// </p>\n// <p className=\"mb-4\">\n//   <strong className=\"text-gray-600\">Phone: </strong>\n//   {editableBloodBanks[bloodBank.id] ? (\n//     <input\n//       type=\"text\"\n//       value={bloodBank.phone}\n//       onChange={(e) => handleInputChange(e, 'phone', bloodBank.id)}\n//       className=\"w-full border rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-600\"\n//     />\n//   ) : (\n//     <span className=\"text-gray-800\">{bloodBank.phone}</span>\n//   )}\n// </p>\n// <p className=\"mb-4\">\n//   <strong className=\"text-gray-600\">District: </strong>\n//   {editableBloodBanks[bloodBank.id] ? (\n//     <input\n//       type=\"text\"\n//       value={bloodBank.district}\n//       onChange={(e) => handleInputChange(e, 'district', bloodBank.id)}\n//       className=\"w-full border rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-600\"\n//     />\n//   ) : (\n//     <span className=\"text-gray-800\">{bloodBank.district}</span>\n//   )}\n// </p>\n// <p className=\"mb-4\">\n//   <strong className=\"text-gray-600\">Email: </strong>\n//   {editableBloodBanks[bloodBank.id] ? (\n//     <input\n//       type=\"text\"\n//       value={bloodBank.email}\n//       onChange={(e) => handleInputChange(e, 'email', bloodBank.id)}\n//       className=\"w-full border rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-600\"\n//     />\n//   ) : (\n//     <span className=\"text-gray-800\">{bloodBank.email}</span>\n//   )}\n// </p>\n// <p className=\"mb-4\">\n//   <strong className=\"text-gray-600\">Address: </strong>\n//   {editableBloodBanks[bloodBank.id] ? (\n//     <input\n//       type=\"text\"\n//       value={bloodBank.address}\n//       onChange={(e) => handleInputChange(e, 'address', bloodBank.id)}\n//       className=\"w-full border rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-600\"\n//     />\n//   ) : (\n//     <span className=\"text-gray-800\">{bloodBank.address}</span>\n//   )}\n// </p>\n// <p className=\"mb-4\">\n//   <strong className=\"text-gray-600\">Latitude: </strong>\n//   {editableBloodBanks[bloodBank.id] ? (\n//     <input\n//       type=\"text\"\n//       value={bloodBank.latitude}\n//       onChange={(e) => handleInputChange(e, 'latitude', bloodBank.id)}\n//       className=\"w-full border rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-600\"\n//     />\n//   ) : (\n//     <span className=\"text-gray-800\">{bloodBank.latitude}</span>\n//   )}\n// </p>\n// <p className=\"mb-4\">\n//   <strong className=\"text-gray-600\">Longitude: </strong>\n//   {editableBloodBanks[bloodBank.id] ? (\n//     <input\n//       type=\"text\"\n//       value={bloodBank.longitude}\n//       onChange={(e) => handleInputChange(e, 'longitude', bloodBank.id)}\n//       className=\"w-full border rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-600\"\n//     />\n//   ) : (\n//     <span className=\"text-gray-800\">{bloodBank.longitude}</span>\n//   )}\n// </p>\n\n//             {editableBloodBanks[bloodBank.id] ? (\n//               <div className=\"flex items-center justify-end mt-6\">\n//                 <button\n//                   className=\"bg-blue-600 text-white px-4 py-2 rounded mr-2 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-600\"\n//                   onClick={() =>\n//                     handleUpdateBloodBank(\n//                       bloodBank.id,\n//                       bloodBanks.find((bank) => bank.id === bloodBank.id)\n//                     )\n//                   }\n//                 >\n//                   Save\n//                 </button>\n//                 <button\n//                   className=\"bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500\"\n//                   onClick={() => handleCancelEdit(bloodBank.id)}\n//                 >\n//                   Cancel\n//                 </button>\n//               </div>\n//             ) : (\n//               <div className=\"flex items-center justify-end mt-6\">\n//                 <button\n//                   className=\"bg-yellow-500 text-white px-4 py-2 rounded mr-2 hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500\"\n//                   onClick={() => handleEditClick(bloodBank.id)}\n//                 >\n//                   Edit\n//                 </button>\n//                 <Link to={`/bloodbank/${bloodBank.id}`} className=\"text-blue-600 hover:underline\">\n//             <button type=\"button\">View Details</button>\n//             </Link>\n//                 <div className=\"mb-4\">\n//                   <button\n//                     type=\"submit\"\n//                     className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\n//                   >\n//                     {isLoading ? 'Submitting...' : 'Submit'}\n//                   </button>\n//                   <button\n//   className=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-600\"\n//   onClick={() => handleDeleteBloodBank(bloodBank.id)}\n// >\n//   Delete\n// </button>\n//                 </div>\n//               </div>\n//             )}\n//           </div>\n//         ))}\n//       </div>\n//       <ToastContainer />\n//     </div>\n//   );\n// }\n\n// export default BloodBankManagement;","map":{"version":3,"names":[],"sources":["C:/Users/VICTUS/OneDrive/Desktop/Nexus blood_care/frontend/src/Component/Admin/bank.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n// import { ToastContainer, toast } from 'react-toastify';\r\n// import 'react-toastify/dist/ReactToastify.css';\r\n\r\n// function BloodBankManagement() {\r\n//   const [bloodBanks, setBloodBanks] = useState([]);\r\n//   const [editableBloodBanks, setEditableBloodBanks] = useState({});\r\n\r\n//   useEffect(() => {\r\n//     fetchBloodBanks();\r\n//   }, []);\r\n\r\n//   const fetchBloodBanks = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:5000/bloodbanks');\r\n//       setBloodBanks(response.data);\r\n//       // Initialize editableBloodBanks state based on the fetched blood banks\r\n//       const initialEditableState = {};\r\n//       response.data.forEach((bloodBank) => {\r\n//         initialEditableState[bloodBank.id] = false;\r\n//       });\r\n//       setEditableBloodBanks(initialEditableState);\r\n//     } catch (error) {\r\n//       console.error('Error fetching blood banks:', error);\r\n//     }\r\n//   };\r\n\r\n//   const handleUpdateBloodBank = async (bloodBankId, updatedData) => {\r\n//     try {\r\n//       // Construct the updated data object\r\n//       const updatedBloodBank = {\r\n//         name: updatedData.name,\r\n//         category: updatedData.category,\r\n//         phone: updatedData.phone,\r\n//         district: updatedData.district,\r\n//         email: updatedData.email,\r\n//         address: updatedData.address,\r\n//         latitude: updatedData.latitude,\r\n//         longitude: updatedData.longitude,\r\n//       };\r\n//       await axios.put(`http://localhost:5000/update/bloodbank/${bloodBankId}`, updatedBloodBank);\r\n//       toast.success('Blood bank updated successfully');\r\n//       fetchBloodBanks(); // Refresh blood bank list\r\n//       setEditableBloodBanks({ ...editableBloodBanks, [bloodBankId]: false }); // Exit edit mode\r\n//     } catch (error) {\r\n//       console.error('Error updating blood bank:', error);\r\n//       toast.error('Failed to update blood bank');\r\n//     }\r\n//   };\r\n\r\n//   const handleEditClick = (bloodBankId) => {\r\n//     setEditableBloodBanks({ ...editableBloodBanks, [bloodBankId]: true });\r\n//   };\r\n\r\n//   const handleCancelEdit = (bloodBankId) => {\r\n//     setEditableBloodBanks({ ...editableBloodBanks, [bloodBankId]: false });\r\n//   };\r\n\r\n//   const handleInputChange = (event, field, bloodBankId) => {\r\n//     const updatedData = {\r\n//       ...bloodBanks.find((bloodBank) => bloodBank.id === bloodBankId),\r\n//       [field]: event.target.value,\r\n//     };\r\n//     setBloodBanks(\r\n//       bloodBanks.map((bloodBank) =>\r\n//         bloodBank.id === bloodBankId ? updatedData : bloodBank\r\n//       )\r\n//     );\r\n//   };\r\n\r\n//   const handleDeleteBloodBank = async (bloodBankId) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/bloodbank/${bloodBankId}`);\r\n//       toast.success('Blood bank deleted successfully');\r\n//       fetchBloodBanks(); // Refresh blood bank list\r\n//     } catch (error) {\r\n//       console.error('Error deleting blood bank:', error);\r\n//       toast.error('Failed to delete blood bank');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto bg-gray-100 p-8\">\r\n//       <h1 className=\"text-4xl font-bold mt-5 mb-8 text-center text-red-600\">Blood Banks</h1>\r\n//       <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-8\">\r\n//         {bloodBanks.map((bloodBank) => (\r\n//           <div key={bloodBank.id} className=\"border p-6 bg-green rounded-lg shadow-md\">\r\n//             <p className=\"mb-4\">\r\n//               <strong className=\"text-gray-600\">Name: </strong>\r\n//               {editableBloodBanks[bloodBank.id] ? (\r\n//                 <input\r\n//                   type=\"text\"\r\n//                   value={bloodBank.name}\r\n//                   onChange={(e) => handleInputChange(e, 'name', bloodBank.id)}\r\n//                   className=\"w-full border rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-600\"\r\n//                 />\r\n//               ) : (\r\n//                 <span className=\"text-gray-800\">{bloodBank.name}</span>\r\n//               )}\r\n//             </p>\r\n//           {/* Display blood bank details similar to the donation component */}\r\n// <p className=\"mb-4\">\r\n//   <strong className=\"text-gray-600\">Category: </strong>\r\n//   {editableBloodBanks[bloodBank.id] ? (\r\n//     <input\r\n//       type=\"text\"\r\n//       value={bloodBank.category}\r\n//       onChange={(e) => handleInputChange(e, 'category', bloodBank.id)}\r\n//       className=\"w-full border rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-600\"\r\n//     />\r\n//   ) : (\r\n//     <span className=\"text-gray-800\">{bloodBank.category}</span>\r\n//   )}\r\n// </p>\r\n// <p className=\"mb-4\">\r\n//   <strong className=\"text-gray-600\">Phone: </strong>\r\n//   {editableBloodBanks[bloodBank.id] ? (\r\n//     <input\r\n//       type=\"text\"\r\n//       value={bloodBank.phone}\r\n//       onChange={(e) => handleInputChange(e, 'phone', bloodBank.id)}\r\n//       className=\"w-full border rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-600\"\r\n//     />\r\n//   ) : (\r\n//     <span className=\"text-gray-800\">{bloodBank.phone}</span>\r\n//   )}\r\n// </p>\r\n// <p className=\"mb-4\">\r\n//   <strong className=\"text-gray-600\">District: </strong>\r\n//   {editableBloodBanks[bloodBank.id] ? (\r\n//     <input\r\n//       type=\"text\"\r\n//       value={bloodBank.district}\r\n//       onChange={(e) => handleInputChange(e, 'district', bloodBank.id)}\r\n//       className=\"w-full border rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-600\"\r\n//     />\r\n//   ) : (\r\n//     <span className=\"text-gray-800\">{bloodBank.district}</span>\r\n//   )}\r\n// </p>\r\n// <p className=\"mb-4\">\r\n//   <strong className=\"text-gray-600\">Email: </strong>\r\n//   {editableBloodBanks[bloodBank.id] ? (\r\n//     <input\r\n//       type=\"text\"\r\n//       value={bloodBank.email}\r\n//       onChange={(e) => handleInputChange(e, 'email', bloodBank.id)}\r\n//       className=\"w-full border rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-600\"\r\n//     />\r\n//   ) : (\r\n//     <span className=\"text-gray-800\">{bloodBank.email}</span>\r\n//   )}\r\n// </p>\r\n// <p className=\"mb-4\">\r\n//   <strong className=\"text-gray-600\">Address: </strong>\r\n//   {editableBloodBanks[bloodBank.id] ? (\r\n//     <input\r\n//       type=\"text\"\r\n//       value={bloodBank.address}\r\n//       onChange={(e) => handleInputChange(e, 'address', bloodBank.id)}\r\n//       className=\"w-full border rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-600\"\r\n//     />\r\n//   ) : (\r\n//     <span className=\"text-gray-800\">{bloodBank.address}</span>\r\n//   )}\r\n// </p>\r\n// <p className=\"mb-4\">\r\n//   <strong className=\"text-gray-600\">Latitude: </strong>\r\n//   {editableBloodBanks[bloodBank.id] ? (\r\n//     <input\r\n//       type=\"text\"\r\n//       value={bloodBank.latitude}\r\n//       onChange={(e) => handleInputChange(e, 'latitude', bloodBank.id)}\r\n//       className=\"w-full border rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-600\"\r\n//     />\r\n//   ) : (\r\n//     <span className=\"text-gray-800\">{bloodBank.latitude}</span>\r\n//   )}\r\n// </p>\r\n// <p className=\"mb-4\">\r\n//   <strong className=\"text-gray-600\">Longitude: </strong>\r\n//   {editableBloodBanks[bloodBank.id] ? (\r\n//     <input\r\n//       type=\"text\"\r\n//       value={bloodBank.longitude}\r\n//       onChange={(e) => handleInputChange(e, 'longitude', bloodBank.id)}\r\n//       className=\"w-full border rounded-md py-2 px-3 focus:outline-none focus:ring-2 focus:ring-blue-600\"\r\n//     />\r\n//   ) : (\r\n//     <span className=\"text-gray-800\">{bloodBank.longitude}</span>\r\n//   )}\r\n// </p>\r\n\r\n\r\n\r\n//             {editableBloodBanks[bloodBank.id] ? (\r\n//               <div className=\"flex items-center justify-end mt-6\">\r\n//                 <button\r\n//                   className=\"bg-blue-600 text-white px-4 py-2 rounded mr-2 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-600\"\r\n//                   onClick={() =>\r\n//                     handleUpdateBloodBank(\r\n//                       bloodBank.id,\r\n//                       bloodBanks.find((bank) => bank.id === bloodBank.id)\r\n//                     )\r\n//                   }\r\n//                 >\r\n//                   Save\r\n//                 </button>\r\n//                 <button\r\n//                   className=\"bg-yellow-500 text-white px-4 py-2 rounded hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500\"\r\n//                   onClick={() => handleCancelEdit(bloodBank.id)}\r\n//                 >\r\n//                   Cancel\r\n//                 </button>\r\n//               </div>\r\n//             ) : (\r\n//               <div className=\"flex items-center justify-end mt-6\">\r\n//                 <button\r\n//                   className=\"bg-yellow-500 text-white px-4 py-2 rounded mr-2 hover:bg-yellow-600 focus:outline-none focus:ring-2 focus:ring-yellow-500\"\r\n//                   onClick={() => handleEditClick(bloodBank.id)}\r\n//                 >\r\n//                   Edit\r\n//                 </button>\r\n//                 <Link to={`/bloodbank/${bloodBank.id}`} className=\"text-blue-600 hover:underline\">\r\n//             <button type=\"button\">View Details</button>\r\n//             </Link>\r\n//                 <div className=\"mb-4\">\r\n//                   <button\r\n//                     type=\"submit\"\r\n//                     className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-indigo-600 hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500\"\r\n//                   >\r\n//                     {isLoading ? 'Submitting...' : 'Submit'}\r\n//                   </button>\r\n//                   <button\r\n//   className=\"bg-red-600 text-white px-4 py-2 rounded hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-600\"\r\n//   onClick={() => handleDeleteBloodBank(bloodBank.id)}\r\n// >\r\n//   Delete\r\n// </button>\r\n//                 </div>\r\n//               </div>\r\n//             )}\r\n//           </div>\r\n//         ))}\r\n//       </div>\r\n//       <ToastContainer />\r\n//     </div>\r\n//   );\r\n// }\r\n\r\n// export default BloodBankManagement;\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}