{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VICTUS\\\\OneDrive\\\\Desktop\\\\Nexus blood_care\\\\frontend\\\\src\\\\Component\\\\user\\\\Usercontext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useReducer, useContext, useEffect } from 'react';\nimport jwtDecode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nconst initialState = {\n  isLoggedIn: false,\n  userRole: null,\n  username: null,\n  userData: {},\n  isLoading: false,\n  error: null\n};\nconst userReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        ...state,\n        isLoggedIn: true,\n        userRole: action.userRole || null,\n        username: action.username || null,\n        userData: action.userData || {},\n        isLoading: false,\n        error: null\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isLoggedIn: false,\n        userRole: null,\n        username: null,\n        userData: {},\n        isLoading: false,\n        error: null\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.isLoading\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.error,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(userReducer, initialState);\n  useEffect(() => {\n    // Check local storage for user data and token on component mount\n    const storedUserData = localStorage.getItem('userData');\n    const storedToken = localStorage.getItem('token');\n    if (storedUserData && storedToken) {\n      const decodedToken = jwt_decode(storedToken); // Decode the token\n      const {\n        userRole,\n        username\n      } = decodedToken;\n\n      // If user data and token are found, dispatch a login action\n      dispatch({\n        type: 'LOGIN',\n        userRole,\n        username,\n        userData: JSON.parse(storedUserData)\n      });\n    }\n  }, []); // Empty dependency array ensures this effect runs only on mount\n\n  const login = (userRole, username, userData, token) => {\n    localStorage.setItem('userData', JSON.stringify(userData));\n    localStorage.setItem('token', token);\n    dispatch({\n      type: 'LOGIN',\n      userRole,\n      username,\n      userData\n    });\n  };\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n    localStorage.removeItem('userData'); // Remove entire user data\n    localStorage.removeItem('token'); // Remove token\n    window.location.href = '/user/login';\n  };\n  const setLoading = isLoading => {\n    dispatch({\n      type: 'SET_LOADING',\n      isLoading\n    });\n  };\n  const setError = error => {\n    dispatch({\n      type: 'SET_ERROR',\n      error\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      state,\n      login,\n      logout,\n      setLoading,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n_s2(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useContext","useEffect","jwtDecode","jsxDEV","_jsxDEV","UserContext","initialState","isLoggedIn","userRole","username","userData","isLoading","error","userReducer","state","action","type","UserProvider","children","_s","dispatch","storedUserData","localStorage","getItem","storedToken","decodedToken","jwt_decode","JSON","parse","login","token","setItem","stringify","logout","removeItem","window","location","href","setLoading","setError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/VICTUS/OneDrive/Desktop/Nexus blood_care/frontend/src/Component/user/Usercontext.js"],"sourcesContent":["import React, { createContext, useReducer, useContext, useEffect } from 'react';\r\nimport jwtDecode from 'jwt-decode';\r\n\r\n\r\nconst UserContext = createContext();\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n  userRole: null,\r\n  username: null,\r\n  userData: {},\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst userReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        userRole: action.userRole || null,\r\n        username: action.username || null,\r\n        userData: action.userData || {},\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        userRole: null,\r\n        username: null,\r\n        userData: {},\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        isLoading: action.isLoading,\r\n      };\r\n    case 'SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(userReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    // Check local storage for user data and token on component mount\r\n    const storedUserData = localStorage.getItem('userData');\r\n    const storedToken = localStorage.getItem('token');\r\n\r\n    if (storedUserData && storedToken) {\r\n      const decodedToken = jwt_decode(storedToken); // Decode the token\r\n      const { userRole, username } = decodedToken;\r\n\r\n      // If user data and token are found, dispatch a login action\r\n      dispatch({ type: 'LOGIN', userRole, username, userData: JSON.parse(storedUserData) });\r\n    }\r\n  }, []); // Empty dependency array ensures this effect runs only on mount\r\n\r\n  const login = (userRole, username, userData, token) => {\r\n    localStorage.setItem('userData', JSON.stringify(userData));\r\n    localStorage.setItem('token', token);\r\n    dispatch({ type: 'LOGIN', userRole, username, userData });\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch({ type: 'LOGOUT' });\r\n    localStorage.removeItem('userData'); // Remove entire user data\r\n    localStorage.removeItem('token'); // Remove token\r\n    window.location.href = '/user/login';\r\n  };\r\n\r\n  const setLoading = (isLoading) => {\r\n    dispatch({ type: 'SET_LOADING', isLoading });\r\n  };\r\n\r\n  const setError = (error) => {\r\n    dispatch({ type: 'SET_ERROR', error });\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ state, login, logout, setLoading, setError }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUser = () => {\r\n  const context = useContext(UserContext);\r\n\r\n  if (!context) {\r\n    throw new Error('useUser must be used within a UserProvider');\r\n  }\r\n\r\n  return context;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}