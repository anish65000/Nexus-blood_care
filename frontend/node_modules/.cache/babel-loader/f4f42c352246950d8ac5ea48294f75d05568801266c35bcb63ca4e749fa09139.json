{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VICTUS\\\\OneDrive\\\\Desktop\\\\Nexus blood_care\\\\frontend\\\\src\\\\Component\\\\Staff\\\\DonorInventory.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Navbar from './StaffNavbar';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DonorInventoryComponent = () => {\n  _s();\n  const [donorInventoryList, setDonorInventoryList] = useState([]);\n  const [newDonorInventory, setNewDonorInventory] = useState({\n    blood_group: '',\n    unit: 0,\n    age: 0,\n    address: '',\n    donor_name: '',\n    donation_time: ''\n  });\n  const [editingDonorInventoryId, setEditingDonorInventoryId] = useState(null);\n\n  // Fetch donor inventory data when the component mounts\n  useEffect(() => {\n    axios.get('http://localhost:5000/login/stf/ds').then(response => {\n      setDonorInventoryList(response.data);\n    }).catch(error => console.error('Error fetching donor inventory:', error));\n  }, []);\n  const showToast = (type, message) => {\n    toast[type](message, {\n      position: \"top-right\",\n      autoClose: 3000,\n      // Auto close the notification after 3 seconds\n      hideProgressBar: false,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true\n    });\n  };\n  const handleUpdateDonorInventory = id => {\n    const donorInventoryToUpdate = donorInventoryList.find(item => item.donor_id === id);\n    if (!donorInventoryToUpdate) {\n      console.error('Donor inventory not found for updating.');\n      return;\n    }\n    axios.put('http://localhost:5000/login/stf/ds/update', donorInventoryToUpdate).then(response => {\n      console.log('Donor inventory updated successfully:', response.data);\n      // Fetch updated data from the server to ensure consistency\n      axios.get('http://localhost:5000/login/stf/ds').then(response => {\n        setDonorInventoryList(response.data);\n        setEditingDonorInventoryId(null);\n        showToast(\"success\", \"Donor inventory updated successfully\");\n      }).catch(error => console.error('Error fetching updated donor inventory data:', error));\n    }).catch(error => {\n      console.error('Error updating donor inventory:', error);\n      showToast(\"error\", \"Error updating donor inventory\");\n    });\n  };\n  const handleEditDonorInventory = id => {\n    setEditingDonorInventoryId(id);\n  };\n  const handleInsertDonorInventory = () => {\n    // Check if unit or age is 0\n    if (newDonorInventory.unit === 0 || newDonorInventory.age === 0) {\n      alert('Unit and Age must be greater than 0.');\n      return;\n    }\n\n    // Update local state immediately\n    setDonorInventoryList(prevList => [...prevList, newDonorInventory]);\n    // Clear the form\n    setNewDonorInventory({\n      blood_group: '',\n      unit: 0,\n      age: 0,\n      address: '',\n      donor_name: '',\n      donation_time: ''\n    });\n\n    // Make the network request in the background\n    axios.post('http://localhost:5000/login/stf/ds/insert', newDonorInventory).then(response => {\n      console.log('Donor inventory inserted successfully:', response.data);\n      showToast(\"success\", \"Donor inventory inserted successfully\");\n      // If needed, update the state again based on the response\n      // setDonorInventoryList(prevList => [...prevList, response.data]);\n    }).catch(error => {\n      console.error('Error inserting donor inventory:', error);\n      showToast(\"error\", \"Error inserting donor inventory\");\n    });\n  };\n  const handleDeleteDonorInventory = id => {\n    axios.delete(`http://localhost:5000/login/stf/ds/delete/${id}`).then(response => {\n      console.log('Donor inventory deleted successfully:', response.data);\n      // Update the donorInventoryList state by removing the deleted item\n      setDonorInventoryList(prevList => prevList.filter(item => item.donor_id !== id));\n      showToast(\"success\", \"Donor inventory deleted successfully\");\n    }).catch(error => {\n      console.error('Error deleting donor inventory:', error);\n      showToast(\"error\", \"Error deleting donor inventory\");\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto p-4 text-lg\",\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-4xl font-bold mb-4\",\n      children: \"Donor Inventory Management\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"overflow-x-auto\",\n      children: [/*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"min-w-full bg-red border border-gray-300 rounded-lg table-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            className: \"bg-green text-left text-sm font-medium uppercase tracking-wider\",\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-4 px-6 border border-gray\",\n              children: \"Blood Group\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-4 px-6 border border-gray\",\n              children: \"Unit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-4 px-6 border border-gray\",\n              children: \"Age\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-4 px-6 border border-gray\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-4 px-6 border border-gray\",\n              children: \"Donor Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-4 px-6 border border-gray\",\n              children: \"Donation Time\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              className: \"py-4 px-6 border border-gray\",\n              children: \"Action\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: donorInventoryList.map((donorInventory, index) => /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: donorInventory.blood_group\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingDonorInventoryId === donorInventory.donor_id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: donorInventory.unit,\n                  onChange: e => setDonorInventoryList(prevList => prevList.map(item => item.donor_id === donorInventory.donor_id ? {\n                    ...item,\n                    unit: Number(e.target.value)\n                  } : item))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 23\n                }, this) : donorInventory.unit\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingDonorInventoryId === donorInventory.donor_id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  value: donorInventory.age,\n                  onChange: e => setDonorInventoryList(prevList => prevList.map(item => item.donor_id === donorInventory.donor_id ? {\n                    ...item,\n                    age: Number(e.target.value)\n                  } : item))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 23\n                }, this) : donorInventory.age\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingDonorInventoryId === donorInventory.donor_id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: donorInventory.address,\n                  onChange: e => setDonorInventoryList(prevList => prevList.map(item => item.donor_id === donorInventory.donor_id ? {\n                    ...item,\n                    address: e.target.value\n                  } : item))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 23\n                }, this) : donorInventory.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingDonorInventoryId === donorInventory.donor_id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: donorInventory.donor_name,\n                  onChange: e => setDonorInventoryList(prevList => prevList.map(item => item.donor_id === donorInventory.donor_id ? {\n                    ...item,\n                    donor_name: e.target.value\n                  } : item))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this) : donorInventory.donor_name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingDonorInventoryId === donorInventory.donor_id ? /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"text\",\n                  value: donorInventory.donation_time,\n                  onChange: e => setDonorInventoryList(prevList => prevList.map(item => item.donor_id === donorInventory.donor_id ? {\n                    ...item,\n                    donation_time: e.target.value\n                  } : item))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 23\n                }, this) : donorInventory.donation_time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: editingDonorInventoryId === donorInventory.donor_id ? /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"text-blue-600\",\n                  onClick: () => handleUpdateDonorInventory(donorInventory.donor_id),\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"text-blue-600 mr-2\",\n                    onClick: () => handleEditDonorInventory(donorInventory.donor_id),\n                    children: \"Edit\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 25\n                  }, this), \"\\xA0 \", /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"text-red-600\",\n                    onClick: () => handleDeleteDonorInventory(donorInventory.donor_id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                colSpan: \"7\",\n                className: \"border-b border-gray-300\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, this)]\n          }, donorInventory.donor_id || index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n_s(DonorInventoryComponent, \"j8bbHtD8lyzdIcI7L+u/UX/x3zA=\");\n_c = DonorInventoryComponent;\nexport default DonorInventoryComponent;\nvar _c;\n$RefreshReg$(_c, \"DonorInventoryComponent\");","map":{"version":3,"names":["React","useState","useEffect","axios","Navbar","ToastContainer","toast","jsxDEV","_jsxDEV","Fragment","_Fragment","DonorInventoryComponent","_s","donorInventoryList","setDonorInventoryList","newDonorInventory","setNewDonorInventory","blood_group","unit","age","address","donor_name","donation_time","editingDonorInventoryId","setEditingDonorInventoryId","get","then","response","data","catch","error","console","showToast","type","message","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","handleUpdateDonorInventory","id","donorInventoryToUpdate","find","item","donor_id","put","log","handleEditDonorInventory","handleInsertDonorInventory","alert","prevList","post","handleDeleteDonorInventory","delete","filter","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","donorInventory","index","value","onChange","e","Number","target","onClick","colSpan","_c","$RefreshReg$"],"sources":["C:/Users/VICTUS/OneDrive/Desktop/Nexus blood_care/frontend/src/Component/Staff/DonorInventory.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport Navbar from './StaffNavbar';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst DonorInventoryComponent = () => {\r\n  const [donorInventoryList, setDonorInventoryList] = useState([]);\r\n  const [newDonorInventory, setNewDonorInventory] = useState({\r\n    blood_group: '',\r\n    unit: 0,\r\n    age: 0,\r\n    address: '',\r\n    donor_name: '',\r\n    donation_time: '',\r\n  });\r\n\r\n  const [editingDonorInventoryId, setEditingDonorInventoryId] = useState(null);\r\n\r\n  // Fetch donor inventory data when the component mounts\r\n  useEffect(() => {\r\n    axios.get('http://localhost:5000/login/stf/ds')\r\n      .then(response => {\r\n        setDonorInventoryList(response.data);\r\n      })\r\n      .catch(error => console.error('Error fetching donor inventory:', error));\r\n  }, []);\r\n\r\n  const showToast = (type, message) => {\r\n    toast[type](message, {\r\n      position: \"top-right\",\r\n      autoClose: 3000, // Auto close the notification after 3 seconds\r\n      hideProgressBar: false,\r\n      closeOnClick: true,\r\n      pauseOnHover: true,\r\n      draggable: true,\r\n    });\r\n  };\r\n\r\n  const handleUpdateDonorInventory = (id) => {\r\n    const donorInventoryToUpdate = donorInventoryList.find(item => item.donor_id === id);\r\n    if (!donorInventoryToUpdate) {\r\n      console.error('Donor inventory not found for updating.');\r\n      return;\r\n    }\r\n\r\n    axios.put('http://localhost:5000/login/stf/ds/update', donorInventoryToUpdate)\r\n      .then(response => {\r\n        console.log('Donor inventory updated successfully:', response.data);\r\n        // Fetch updated data from the server to ensure consistency\r\n        axios.get('http://localhost:5000/login/stf/ds')\r\n          .then(response => {\r\n            setDonorInventoryList(response.data);\r\n            setEditingDonorInventoryId(null);\r\n            showToast(\"success\", \"Donor inventory updated successfully\");\r\n          })\r\n          .catch(error => console.error('Error fetching updated donor inventory data:', error));\r\n      })\r\n      .catch(error => {\r\n        console.error('Error updating donor inventory:', error);\r\n        showToast(\"error\", \"Error updating donor inventory\");\r\n      });\r\n  };\r\n\r\n  const handleEditDonorInventory = (id) => {\r\n    setEditingDonorInventoryId(id);\r\n  };\r\n\r\n  const handleInsertDonorInventory = () => {\r\n    // Check if unit or age is 0\r\n    if (newDonorInventory.unit === 0 || newDonorInventory.age === 0) {\r\n      alert('Unit and Age must be greater than 0.');\r\n      return;\r\n    }\r\n\r\n    // Update local state immediately\r\n    setDonorInventoryList(prevList => [...prevList, newDonorInventory]);\r\n    // Clear the form\r\n    setNewDonorInventory({\r\n      blood_group: '',\r\n      unit: 0,\r\n      age: 0,\r\n      address: '',\r\n      donor_name: '',\r\n      donation_time: '',\r\n    });\r\n\r\n    // Make the network request in the background\r\n    axios.post('http://localhost:5000/login/stf/ds/insert', newDonorInventory)\r\n      .then(response => {\r\n        console.log('Donor inventory inserted successfully:', response.data);\r\n        showToast(\"success\", \"Donor inventory inserted successfully\");\r\n        // If needed, update the state again based on the response\r\n        // setDonorInventoryList(prevList => [...prevList, response.data]);\r\n      })\r\n      .catch(error => {\r\n        console.error('Error inserting donor inventory:', error);\r\n        showToast(\"error\", \"Error inserting donor inventory\");\r\n      });\r\n  };\r\n\r\n  const handleDeleteDonorInventory = id => {\r\n    axios.delete(`http://localhost:5000/login/stf/ds/delete/${id}`)\r\n      .then(response => {\r\n        console.log('Donor inventory deleted successfully:', response.data);\r\n        // Update the donorInventoryList state by removing the deleted item\r\n        setDonorInventoryList(prevList => prevList.filter(item => item.donor_id !== id));\r\n        showToast(\"success\", \"Donor inventory deleted successfully\");\r\n      })\r\n      .catch(error => {\r\n        console.error('Error deleting donor inventory:', error);\r\n        showToast(\"error\", \"Error deleting donor inventory\");\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mx-auto p-4 text-lg\">\r\n      <Navbar />\r\n      <h1 className=\"text-4xl font-bold mb-4\">Donor Inventory Management</h1>\r\n      <div className=\"overflow-x-auto\">\r\n        {/* Add the ToastContainer here */}\r\n        <ToastContainer />\r\n\r\n        <table className=\"min-w-full bg-red border border-gray-300 rounded-lg table-auto\">\r\n          <thead>\r\n            <tr className=\"bg-green text-left text-sm font-medium uppercase tracking-wider\">\r\n              <th className=\"py-4 px-6 border border-gray\">Blood Group</th>\r\n              <th className=\"py-4 px-6 border border-gray\">Unit</th>\r\n              <th className=\"py-4 px-6 border border-gray\">Age</th>\r\n              <th className=\"py-4 px-6 border border-gray\">Address</th>\r\n              <th className=\"py-4 px-6 border border-gray\">Donor Name</th>\r\n              <th className=\"py-4 px-6 border border-gray\">Donation Time</th>\r\n              <th className=\"py-4 px-6 border border-gray\">Action</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {donorInventoryList.map((donorInventory, index) => (\r\n              <React.Fragment key={donorInventory.donor_id || index}>\r\n                <tr>\r\n                  <td>{donorInventory.blood_group}</td>\r\n                  <td>\r\n                    {editingDonorInventoryId === donorInventory.donor_id ? (\r\n                      <input\r\n                        type=\"number\"\r\n                        value={donorInventory.unit}\r\n                        onChange={(e) => setDonorInventoryList(prevList =>\r\n                          prevList.map(item => (item.donor_id === donorInventory.donor_id ? { ...item, unit: Number(e.target.value) } : item))\r\n                        )}\r\n                      />\r\n                    ) : (\r\n                      donorInventory.unit\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingDonorInventoryId === donorInventory.donor_id ? (\r\n                      <input\r\n                        type=\"number\"\r\n                        value={donorInventory.age}\r\n                        onChange={(e) => setDonorInventoryList(prevList =>\r\n                          prevList.map(item => (item.donor_id === donorInventory.donor_id ? { ...item, age: Number(e.target.value) } : item))\r\n                        )}\r\n                      />\r\n                    ) : (\r\n                      donorInventory.age\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingDonorInventoryId === donorInventory.donor_id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={donorInventory.address}\r\n                        onChange={(e) => setDonorInventoryList(prevList =>\r\n                          prevList.map(item => (item.donor_id === donorInventory.donor_id ? { ...item, address: e.target.value } : item))\r\n                        )}\r\n                      />\r\n                    ) : (\r\n                      donorInventory.address\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingDonorInventoryId === donorInventory.donor_id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={donorInventory.donor_name}\r\n                        onChange={(e) => setDonorInventoryList(prevList =>\r\n                          prevList.map(item => (item.donor_id === donorInventory.donor_id ? { ...item, donor_name: e.target.value } : item))\r\n                        )}\r\n                      />\r\n                    ) : (\r\n                      donorInventory.donor_name\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingDonorInventoryId === donorInventory.donor_id ? (\r\n                      <input\r\n                        type=\"text\"\r\n                        value={donorInventory.donation_time}\r\n                        onChange={(e) => setDonorInventoryList(prevList =>\r\n                          prevList.map(item => (item.donor_id === donorInventory.donor_id ? { ...item, donation_time: e.target.value } : item))\r\n                        )}\r\n                      />\r\n                    ) : (\r\n                      donorInventory.donation_time\r\n                    )}\r\n                  </td>\r\n                  <td>\r\n                    {editingDonorInventoryId === donorInventory.donor_id ? (\r\n                      <button className=\"text-blue-600\" onClick={() => handleUpdateDonorInventory(donorInventory.donor_id)}>\r\n                        Save\r\n                      </button>\r\n                    ) : (\r\n                      <>\r\n                        <button className=\"text-blue-600 mr-2\" onClick={() => handleEditDonorInventory(donorInventory.donor_id)}>\r\n                          Edit\r\n                        </button>\r\n                        &nbsp; {/* Add a non-breaking space here */}\r\n                        <button className=\"text-red-600\" onClick={() => handleDeleteDonorInventory(donorInventory.donor_id)}>\r\n                          Delete\r\n                        </button>\r\n                      </>\r\n                    )}\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td colSpan=\"7\" className=\"border-b border-gray-300\"></td>\r\n                </tr>\r\n              </React.Fragment>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DonorInventoryComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}