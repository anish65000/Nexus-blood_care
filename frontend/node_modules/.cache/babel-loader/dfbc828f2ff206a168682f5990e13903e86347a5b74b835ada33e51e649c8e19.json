{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VICTUS\\\\OneDrive\\\\Desktop\\\\Nexus blood_care\\\\frontend\\\\src\\\\Component\\\\user\\\\Usercontext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// UserContext.js\nimport React, { createContext, useReducer, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserContext = /*#__PURE__*/createContext();\nconst initialState = {\n  isLoggedIn: false,\n  userRole: null,\n  username: null,\n  userData: {},\n  isLoading: false,\n  error: null\n};\nconst userReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        ...state,\n        isLoggedIn: true,\n        userRole: action.userRole || null,\n        username: action.username || null,\n        userData: action.userData || {},\n        isLoading: false,\n        error: null\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isLoggedIn: false,\n        userRole: null,\n        username: null,\n        userData: {},\n        isLoading: false,\n        error: null\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.isLoading\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.error,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\nexport const UserProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(userReducer, initialState);\n  useEffect(() => {\n    // Check local storage for a token on component mount\n    const storedToken = localStorage.getItem('token');\n    if (storedToken) {\n      // If a token is found, dispatch a login action\n      const decodedToken = decodeToken(storedToken);\n      dispatch({\n        type: 'LOGIN',\n        userRole: decodedToken.userRole,\n        username: decodedToken.username,\n        userData: {\n          token: storedToken\n        }\n      });\n    }\n  }, []); // Empty dependency array ensures this effect runs only on mount\n\n  const login = (userRole, username, userData) => {\n    const token = userData.token; // Make sure the token is present in userData\n    localStorage.setItem('token', token);\n    dispatch({\n      type: 'LOGIN',\n      userRole,\n      username,\n      userData\n    });\n  };\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n    localStorage.removeItem('token');\n    // Remove any other data you want to clear on logout\n  };\n  const setLoading = isLoading => {\n    dispatch({\n      type: 'SET_LOADING',\n      isLoading\n    });\n  };\n  const setError = error => {\n    dispatch({\n      type: 'SET_ERROR',\n      error\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(UserContext.Provider, {\n    value: {\n      state,\n      login,\n      logout,\n      setLoading,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(UserProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = UserProvider;\nexport const useUser = () => {\n  _s2();\n  const context = useContext(UserContext);\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n  return context;\n};\n\n// Helper function to decode the JWT token\n_s2(useUser, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nconst decodeToken = token => {\n  try {\n    return JSON.parse(atob(token.split('.')[1]));\n  } catch (error) {\n    console.error('Error decoding token:', error);\n    return {};\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"UserProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useContext","useEffect","jsxDEV","_jsxDEV","UserContext","initialState","isLoggedIn","userRole","username","userData","isLoading","error","userReducer","state","action","type","UserProvider","children","_s","dispatch","storedToken","localStorage","getItem","decodedToken","decodeToken","token","login","setItem","logout","removeItem","setLoading","setError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useUser","_s2","context","Error","JSON","parse","atob","split","console","$RefreshReg$"],"sources":["C:/Users/VICTUS/OneDrive/Desktop/Nexus blood_care/frontend/src/Component/user/Usercontext.js"],"sourcesContent":["// UserContext.js\r\nimport React, { createContext, useReducer, useContext, useEffect } from 'react';\r\n\r\nconst UserContext = createContext();\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n  userRole: null,\r\n  username: null,\r\n  userData: {},\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst userReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        userRole: action.userRole || null,\r\n        username: action.username || null,\r\n        userData: action.userData || {},\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        userRole: null,\r\n        username: null,\r\n        userData: {},\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        isLoading: action.isLoading,\r\n      };\r\n    case 'SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const UserProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(userReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    // Check local storage for a token on component mount\r\n    const storedToken = localStorage.getItem('token');\r\n\r\n    if (storedToken) {\r\n      // If a token is found, dispatch a login action\r\n      const decodedToken = decodeToken(storedToken);\r\n      dispatch({ type: 'LOGIN', userRole: decodedToken.userRole, username: decodedToken.username, userData: { token: storedToken } });\r\n    }\r\n  }, []); // Empty dependency array ensures this effect runs only on mount\r\n\r\n  const login = (userRole, username, userData) => {\r\n    const token = userData.token; // Make sure the token is present in userData\r\n    localStorage.setItem('token', token);\r\n    dispatch({ type: 'LOGIN', userRole, username, userData });\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch({ type: 'LOGOUT' });\r\n    localStorage.removeItem('token');\r\n    // Remove any other data you want to clear on logout\r\n  };\r\n\r\n  const setLoading = (isLoading) => {\r\n    dispatch({ type: 'SET_LOADING', isLoading });\r\n  };\r\n\r\n  const setError = (error) => {\r\n    dispatch({ type: 'SET_ERROR', error });\r\n  };\r\n\r\n  return (\r\n    <UserContext.Provider value={{ state, login, logout, setLoading, setError }}>\r\n      {children}\r\n    </UserContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useUser = () => {\r\n  const context = useContext(UserContext);\r\n\r\n  if (!context) {\r\n    throw new Error('useUser must be used within a UserProvider');\r\n  }\r\n\r\n  return context;\r\n};\r\n\r\n// Helper function to decode the JWT token\r\nconst decodeToken = (token) => {\r\n  try {\r\n    return JSON.parse(atob(token.split('.')[1]));\r\n  } catch (error) {\r\n    console.error('Error decoding token:', error);\r\n    return {};\r\n  }\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}