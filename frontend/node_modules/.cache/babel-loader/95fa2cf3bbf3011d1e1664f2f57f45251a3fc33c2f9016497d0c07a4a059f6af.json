{"ast":null,"code":"var _s = $RefreshSig$();\n// useAuth.js\nimport { useState } from 'react';\nimport axios from 'axios';\nexport function useAuth() {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const login = async (username, password) => {\n    try {\n      // Make a request to the backend to authenticate\n      const response = await axios.post('http://localhost:5000/Staff/login', {\n        stfUserName: username,\n        stfPassword: password\n      });\n\n      // If login successful, set isAuthenticated to true\n      setIsAuthenticated(true);\n      // You might want to store token or user information here if needed\n      return response;\n    } catch (error) {\n      // If login fails, throw an error\n      throw new Error('Login failed');\n    }\n  };\n  return {\n    isAuthenticated,\n    login\n  };\n}\n_s(useAuth, \"BT2f1XiqCgFHwobQTWR7kond0Ig=\");","map":{"version":3,"names":["useState","axios","useAuth","_s","isAuthenticated","setIsAuthenticated","login","username","password","response","post","stfUserName","stfPassword","error","Error"],"sources":["C:/Users/VICTUS/OneDrive/Desktop/Nexus blood_care/frontend/src/Component/Staff/Auth.js"],"sourcesContent":["// useAuth.js\r\nimport { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nexport function useAuth() {\r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n\r\n  const login = async (username, password) => {\r\n    try {\r\n      // Make a request to the backend to authenticate\r\n      const response = await axios.post('http://localhost:5000/Staff/login', {\r\n        stfUserName: username,\r\n        stfPassword: password\r\n      });\r\n\r\n      // If login successful, set isAuthenticated to true\r\n      setIsAuthenticated(true);\r\n      // You might want to store token or user information here if needed\r\n      return response;\r\n    } catch (error) {\r\n      // If login fails, throw an error\r\n      throw new Error('Login failed');\r\n    }\r\n  };\r\n\r\n  return {\r\n    isAuthenticated,\r\n    login,\r\n  };\r\n}\r\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAEzB,OAAO,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACxB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGL,QAAQ,CAAC,KAAK,CAAC;EAE7D,MAAMM,KAAK,GAAG,MAAAA,CAAOC,QAAQ,EAAEC,QAAQ,KAAK;IAC1C,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAI,CAAC,mCAAmC,EAAE;QACrEC,WAAW,EAAEJ,QAAQ;QACrBK,WAAW,EAAEJ;MACf,CAAC,CAAC;;MAEF;MACAH,kBAAkB,CAAC,IAAI,CAAC;MACxB;MACA,OAAOI,QAAQ;IACjB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd;MACA,MAAM,IAAIC,KAAK,CAAC,cAAc,CAAC;IACjC;EACF,CAAC;EAED,OAAO;IACLV,eAAe;IACfE;EACF,CAAC;AACH;AAACH,EAAA,CAzBeD,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}