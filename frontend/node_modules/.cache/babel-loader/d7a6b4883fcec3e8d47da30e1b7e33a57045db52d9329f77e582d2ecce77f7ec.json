{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VICTUS\\\\OneDrive\\\\Desktop\\\\Nexus blood_care\\\\frontend\\\\src\\\\Component\\\\Staff\\\\StaffContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useReducer, useContext, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StaffContext = /*#__PURE__*/createContext();\nconst initialState = {\n  isLoggedIn: false,\n  stfStaffType: null,\n  stfUserName: null,\n  staffData: {},\n  isLoading: false,\n  error: null\n};\nconst staffReducer = (state, action) => {\n  switch (action.type) {\n    case 'LOGIN':\n      return {\n        ...state,\n        isLoggedIn: true,\n        stfStaffType: action.stfStaffType || null,\n        stfUserName: action.stfUserName || null,\n        staffData: action.staffData || {},\n        isLoading: false,\n        error: null\n      };\n    case 'LOGOUT':\n      return {\n        ...state,\n        isLoggedIn: false,\n        stfStaffType: null,\n        stfUserName: null,\n        staffData: {},\n        isLoading: false,\n        error: null\n      };\n    case 'SET_LOADING':\n      return {\n        ...state,\n        isLoading: action.isLoading\n      };\n    case 'SET_ERROR':\n      return {\n        ...state,\n        error: action.error,\n        isLoading: false\n      };\n    default:\n      return state;\n  }\n};\nexport const StaffProvider = ({\n  children\n}) => {\n  _s();\n  const [state, dispatch] = useReducer(staffReducer, initialState);\n  useEffect(() => {\n    // You can add any initialization logic here if needed\n  }, []);\n  const login = (stfStaffType, stfUserName, staffData) => {\n    dispatch({\n      type: 'LOGIN',\n      stfStaffType,\n      stfUserName,\n      staffData\n    });\n  };\n  const logout = () => {\n    dispatch({\n      type: 'LOGOUT'\n    });\n    // You can add any cleanup logic here if needed\n  };\n  const setLoading = isLoading => {\n    dispatch({\n      type: 'SET_LOADING',\n      isLoading\n    });\n  };\n  const setError = error => {\n    dispatch({\n      type: 'SET_ERROR',\n      error\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(StaffContext.Provider, {\n    value: {\n      state,\n      login,\n      logout,\n      setLoading,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(StaffProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n_c = StaffProvider;\nexport const useStaff = () => {\n  _s2();\n  const context = useContext(StaffContext);\n  if (!context) {\n    throw new Error('useStaff must be used within a StaffProvider');\n  }\n  return context;\n};\n_s2(useStaff, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"StaffProvider\");","map":{"version":3,"names":["React","createContext","useReducer","useContext","useEffect","jsxDEV","_jsxDEV","StaffContext","initialState","isLoggedIn","stfStaffType","stfUserName","staffData","isLoading","error","staffReducer","state","action","type","StaffProvider","children","_s","dispatch","login","logout","setLoading","setError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useStaff","_s2","context","Error","$RefreshReg$"],"sources":["C:/Users/VICTUS/OneDrive/Desktop/Nexus blood_care/frontend/src/Component/Staff/StaffContext.js"],"sourcesContent":["import React, { createContext, useReducer, useContext, useEffect } from 'react';\r\n\r\nconst StaffContext = createContext();\r\n\r\nconst initialState = {\r\n  isLoggedIn: false,\r\n  stfStaffType: null,\r\n  stfUserName: null,\r\n  staffData: {},\r\n  isLoading: false,\r\n  error: null,\r\n};\r\n\r\nconst staffReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'LOGIN':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: true,\r\n        stfStaffType: action.stfStaffType || null,\r\n        stfUserName: action.stfUserName || null,\r\n        staffData: action.staffData || {},\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case 'LOGOUT':\r\n      return {\r\n        ...state,\r\n        isLoggedIn: false,\r\n        stfStaffType: null,\r\n        stfUserName: null,\r\n        staffData: {},\r\n        isLoading: false,\r\n        error: null,\r\n      };\r\n    case 'SET_LOADING':\r\n      return {\r\n        ...state,\r\n        isLoading: action.isLoading,\r\n      };\r\n    case 'SET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.error,\r\n        isLoading: false,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const StaffProvider = ({ children }) => {\r\n  const [state, dispatch] = useReducer(staffReducer, initialState);\r\n\r\n  useEffect(() => {\r\n    // You can add any initialization logic here if needed\r\n  }, []);\r\n\r\n  const login = (stfStaffType, stfUserName, staffData) => {\r\n    dispatch({ type: 'LOGIN', stfStaffType, stfUserName, staffData });\r\n  };\r\n\r\n  const logout = () => {\r\n    dispatch({ type: 'LOGOUT' });\r\n    // You can add any cleanup logic here if needed\r\n  };\r\n\r\n  const setLoading = (isLoading) => {\r\n    dispatch({ type: 'SET_LOADING', isLoading });\r\n  };\r\n\r\n  const setError = (error) => {\r\n    dispatch({ type: 'SET_ERROR', error });\r\n  };\r\n\r\n  return (\r\n    <StaffContext.Provider value={{ state, login, logout, setLoading, setError }}>\r\n      {children}\r\n    </StaffContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useStaff = () => {\r\n  const context = useContext(StaffContext);\r\n\r\n  if (!context) {\r\n    throw new Error('useStaff must be used within a StaffProvider');\r\n  }\r\n\r\n  return context;\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}