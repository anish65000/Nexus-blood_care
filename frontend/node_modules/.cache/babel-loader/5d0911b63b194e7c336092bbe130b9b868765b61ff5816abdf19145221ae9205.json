{"ast":null,"code":"// // BloodRequestComponent.js\n\n// import React from 'react';\n// import { useUser } from '.';\n// import { useForm } from 'react-hook-form';\n// import axios from 'axios';\n\n// const BloodRequestComponent = () => {\n//   const { state } = useUser();\n//   const { register, handleSubmit, formState: { errors } } = useForm();\n\n//   const onSubmit = async (data) => {\n//     try {\n//       console.log('authenticateToken:', state.userData.authenticateToken);\n\n//       const response = await axios.post('http://localhost:5000/login/stf/request', data, {\n//         headers: {\n//           Authorization: `Bearer ${state.userData.authenticateToken}`,\n//         },\n//       });\n\n//       console.log(response.data);\n//       // Handle success or redirect as needed\n//     } catch (error) {\n//       console.error('Error requesting blood:', error);\n//       // Handle error\n//     }\n//   };\n\n//   if (state.isLoggedIn) {\n//     return (\n//       <form onSubmit={handleSubmit(onSubmit)}>\n//         <div className=\"mb-4\">\n//           <label htmlFor=\"bloodGroup\" className=\"block text-sm font-medium text-gray-700\">\n//             Blood Group:\n//           </label>\n//           <input\n//             type=\"text\"\n//             id=\"bloodGroup\"\n//             {...register('bloodGroup', { required: true })}\n//             className=\"mt-1 p-2 border rounded-md w-full\"\n//           />\n//           {errors.bloodGroup && (\n//             <span className=\"text-red-500 text-sm\">Blood group is required</span>\n//           )}\n//         </div>\n\n//         <div className=\"mb-4\">\n//           <label htmlFor=\"unit\" className=\"block text-sm font-medium text-gray-700\">\n//             Unit:\n//           </label>\n//           <input\n//             type=\"number\"\n//             id=\"unit\"\n//             {...register('unit', { required: true, min: 1 })}\n//             className=\"mt-1 p-2 border rounded-md w-full\"\n//           />\n//           {errors.unit && (\n//             <span className=\"text-red-500 text-sm\">Please enter a valid unit value</span>\n//           )}\n//         </div>\n\n//         <div className=\"mb-4\">\n//           <label htmlFor=\"patientName\" className=\"block text-sm font-medium text-gray-700\">\n//             Patient Name:\n//           </label>\n//           <input\n//             type=\"text\"\n//             id=\"patientName\"\n//             {...register('patientName', { required: true })}\n//             className=\"mt-1 p-2 border rounded-md w-full\"\n//           />\n//           {errors.patientName && (\n//             <span className=\"text-red-500 text-sm\">Patient name is required</span>\n//           )}\n//         </div>\n\n//         <div className=\"mb-4\">\n//           <label htmlFor=\"patientAddress\" className=\"block text-sm font-medium text-gray-700\">\n//             Patient Address:\n//           </label>\n//           <textarea\n//             id=\"patientAddress\"\n//             {...register('patientAddress', { required: true })}\n//             className=\"mt-1 p-2 border rounded-md w-full\"\n//           />\n//           {errors.patientAddress && (\n//             <span className=\"text-red-500 text-sm\">Patient address is required</span>\n//           )}\n//         </div>\n\n//         <div className=\"mb-4\">\n//           <label htmlFor=\"patientContact\" className=\"block text-sm font-medium text-gray-700\">\n//             Patient Contact:\n//           </label>\n//           <input\n//             type=\"tel\"\n//             id=\"patientContact\"\n//             {...register('patientContact', { required: true, pattern: /^[0-9]+$/ })}\n//             className=\"mt-1 p-2 border rounded-md w-full\"\n//           />\n//           {errors.patientContact && (\n//             <span className=\"text-red-500 text-sm\">Please enter a valid contact number</span>\n//           )}\n//         </div>\n\n//         <div>\n//           <button\n//             type=\"submit\"\n//             className=\"py-2 px-4 bg-red text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring focus:border-blue-300\"\n//           >\n//             Request Blood\n//           </button>\n//         </div>\n//       </form>\n//     );\n//   } else {\n//     return <p>Please log in to access this feature.</p>;\n//   }\n// };\n\n// export default BloodRequestComponent;","map":{"version":3,"names":[],"sources":["C:/Users/VICTUS/OneDrive/Desktop/Nexus blood_care/frontend/src/Component/Staff/BloodRequest.js"],"sourcesContent":["// // BloodRequestComponent.js\r\n\r\n// import React from 'react';\r\n// import { useUser } from '.';\r\n// import { useForm } from 'react-hook-form';\r\n// import axios from 'axios';\r\n\r\n// const BloodRequestComponent = () => {\r\n//   const { state } = useUser();\r\n//   const { register, handleSubmit, formState: { errors } } = useForm();\r\n\r\n//   const onSubmit = async (data) => {\r\n//     try {\r\n//       console.log('authenticateToken:', state.userData.authenticateToken);\r\n\r\n//       const response = await axios.post('http://localhost:5000/login/stf/request', data, {\r\n//         headers: {\r\n//           Authorization: `Bearer ${state.userData.authenticateToken}`,\r\n//         },\r\n//       });\r\n\r\n//       console.log(response.data);\r\n//       // Handle success or redirect as needed\r\n//     } catch (error) {\r\n//       console.error('Error requesting blood:', error);\r\n//       // Handle error\r\n//     }\r\n//   };\r\n\r\n//   if (state.isLoggedIn) {\r\n//     return (\r\n//       <form onSubmit={handleSubmit(onSubmit)}>\r\n//         <div className=\"mb-4\">\r\n//           <label htmlFor=\"bloodGroup\" className=\"block text-sm font-medium text-gray-700\">\r\n//             Blood Group:\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"bloodGroup\"\r\n//             {...register('bloodGroup', { required: true })}\r\n//             className=\"mt-1 p-2 border rounded-md w-full\"\r\n//           />\r\n//           {errors.bloodGroup && (\r\n//             <span className=\"text-red-500 text-sm\">Blood group is required</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className=\"mb-4\">\r\n//           <label htmlFor=\"unit\" className=\"block text-sm font-medium text-gray-700\">\r\n//             Unit:\r\n//           </label>\r\n//           <input\r\n//             type=\"number\"\r\n//             id=\"unit\"\r\n//             {...register('unit', { required: true, min: 1 })}\r\n//             className=\"mt-1 p-2 border rounded-md w-full\"\r\n//           />\r\n//           {errors.unit && (\r\n//             <span className=\"text-red-500 text-sm\">Please enter a valid unit value</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className=\"mb-4\">\r\n//           <label htmlFor=\"patientName\" className=\"block text-sm font-medium text-gray-700\">\r\n//             Patient Name:\r\n//           </label>\r\n//           <input\r\n//             type=\"text\"\r\n//             id=\"patientName\"\r\n//             {...register('patientName', { required: true })}\r\n//             className=\"mt-1 p-2 border rounded-md w-full\"\r\n//           />\r\n//           {errors.patientName && (\r\n//             <span className=\"text-red-500 text-sm\">Patient name is required</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className=\"mb-4\">\r\n//           <label htmlFor=\"patientAddress\" className=\"block text-sm font-medium text-gray-700\">\r\n//             Patient Address:\r\n//           </label>\r\n//           <textarea\r\n//             id=\"patientAddress\"\r\n//             {...register('patientAddress', { required: true })}\r\n//             className=\"mt-1 p-2 border rounded-md w-full\"\r\n//           />\r\n//           {errors.patientAddress && (\r\n//             <span className=\"text-red-500 text-sm\">Patient address is required</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div className=\"mb-4\">\r\n//           <label htmlFor=\"patientContact\" className=\"block text-sm font-medium text-gray-700\">\r\n//             Patient Contact:\r\n//           </label>\r\n//           <input\r\n//             type=\"tel\"\r\n//             id=\"patientContact\"\r\n//             {...register('patientContact', { required: true, pattern: /^[0-9]+$/ })}\r\n//             className=\"mt-1 p-2 border rounded-md w-full\"\r\n//           />\r\n//           {errors.patientContact && (\r\n//             <span className=\"text-red-500 text-sm\">Please enter a valid contact number</span>\r\n//           )}\r\n//         </div>\r\n\r\n//         <div>\r\n//           <button\r\n//             type=\"submit\"\r\n//             className=\"py-2 px-4 bg-red text-white rounded-md hover:bg-blue-700 focus:outline-none focus:ring focus:border-blue-300\"\r\n//           >\r\n//             Request Blood\r\n//           </button>\r\n//         </div>\r\n//       </form>\r\n//     );\r\n//   } else {\r\n//     return <p>Please log in to access this feature.</p>;\r\n//   }\r\n// };\r\n\r\n// export default BloodRequestComponent;\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}