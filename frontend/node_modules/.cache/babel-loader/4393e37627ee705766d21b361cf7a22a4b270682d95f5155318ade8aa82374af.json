{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import axios from 'axios';\n\n// const BloodStock = () => {\n//   const [stocks, setStocks] = useState([]);\n//   const [newStock, setNewStock] = useState({\n//     name: '',\n//     blood_group: '',\n//     unit: 0,\n//     donor_name: '',\n//     donation_time: '',\n//     blood_status: '',\n//   });\n//   const [showSuccessMessage, setShowSuccessMessage] = useState(false);\n\n//   useEffect(() => {\n//     getStocks();\n//   }, []);\n\n//   const getStocks = async () => {\n//     try {\n//       const response = await axios.get('http://localhost:5000/login/stf/bs');\n//       setStocks(response.data);\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const addStock = async () => {\n//     try {\n//       await axios.post('http://localhost:5000/login/stf/bs/insert', newStock);\n//       getStocks();\n//       setNewStock({\n//         blood_group: '',\n//         unit: 0,\n//         donor_name: '',\n//         donation_time: '',\n//         blood_status: '',\n//       });\n//       setShowSuccessMessage(true);\n//       setTimeout(() => {\n//         setShowSuccessMessage(false);\n//       }, 3000); // Hide the success message after 3 seconds\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const updateStock = async (b_id, unitUpdate) => {\n//     try {\n//       await axios.put('http://localhost:5000/login/stf/bs/update', {\n//         b_id,\n//         blood_group: '',\n//         unitUpdate,\n//         donor_name: '',\n//         donation_time: '',\n//         blood_status: '',\n//       });\n//       getStocks();\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   const deleteStock = async (id) => {\n//     try {\n//       await axios.delete(`http://localhost:5000/login/stf/bs/delete/${id}`);\n//       getStocks();\n//     } catch (error) {\n//       console.log(error);\n//     }\n//   };\n\n//   return (\n//     <div className=\"container mx-auto p-4\">\n//       <h1 className=\"text-3xl font-bold my-4\">Blood Stock Management</h1>\n\n//       {showSuccessMessage && (\n//         <div className=\"bg-green-200 text-green-800 p-2 mb-4 rounded\">\n//           Stock added successfully!\n//         </div>\n//       )}\n\n// <table className=\"table-auto border-collapse border border-slate-500\">\n//   <thead>\n//     <tr>\n//       <th className=\"border border-slate-600 px-4 py-2\">Blood Group</th>\n//       <th className=\"border border-slate-600 px-4 py-2\">Donor</th>\n//       <th className=\"border border-slate-600 px-4 py-2\">Units</th>\n//       <th className=\"border border-slate-600 px-4 py-2\">Donated On</th>\n//       <th className=\"border border-slate-600 px-4 py-2\">Status</th>\n//       <th className=\"border border-slate-600 px-4 py-2\">Actions</th>\n//     </tr>\n//   </thead>\n//   <tbody>\n//     {stocks.map(stock => (\n//       <tr key={stock.id}>\n//         <td className=\"border border-slate-700 px-4 py-2\">{stock.blood_group}</td>\n//         <td className=\"border border-slate-700 px-4 py-2\">{stock.donor_name}</td>\n//         <td className=\"border border-slate-700 px-4 py-2\">{stock.unit}</td>\n//         <td className=\"border border-slate-700 px-4 py-2\">{stock.donation_time}</td>\n//         <td className=\"border border-slate-700 px-4 py-2\">{stock.blood_status}</td>\n//         <td className=\"border border-slate-700 px-4 py-2\">\n//           <button\n//             className=\"bg-yellow-500 px-4 py-2 rounded inline-block mr-2\"\n//             onClick={() => updateStock()}\n//           >\n//             updateStock\n//           </button>\n\n//           <button\n//             className=\"bg-red-500 px-4 py-2 rounded inline-block\"\n//             onClick={() => deleteStock(stock.id)}  \n//           >\n//             Delete\n//           </button>\n//         </td>\n//       </tr>\n//     ))}\n//   </tbody>\n// </table>\n\n//       <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 mt-8\">\n//         <h2 className=\"text-lg font-medium mb-4\">Add Stock</h2>\n\n//         <form onSubmit={(e) => { e.preventDefault(); addStock(); }} className=\"space-y-4\">\n\n//   <label className=\"block text-gray-700 font-bold mb-2\">Blood Group:</label>\n//   <input\n//     className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n//     type=\"text\"\n//     value={newStock.blood_group}\n//     onChange={(e) => setNewStock({ ...newStock, blood_group: e.target.value })}\n//   />\n\n//   <label className=\"block text-gray-700 font-bold mb-2\">Unit:</label>\n//   <input\n//     className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n//     type=\"number\"\n//     value={newStock.unit}\n//     onChange={(e) => setNewStock({ ...newStock, unit: e.target.value })}\n//   />\n\n//   <label className=\"block text-gray-700 font-bold mb-2\">Donor Name:</label>\n//   <input\n//     className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n//     type=\"text\"\n//     value={newStock.donor_name}\n//     onChange={(e) => setNewStock({ ...newStock, donor_name: e.target.value })}\n//   />\n\n//   <label className=\"block text-gray-700 font-bold mb-2\">Donation Time:</label>\n//   <input\n//     className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n//     type=\"text\"\n//     value={newStock.donation_time}\n//     onChange={(e) => setNewStock({ ...newStock, donation_time: e.target.value })}\n//   />\n\n//   <label className=\"block text-gray-700 font-bold mb-2\">Blood Status:</label>\n//   <input\n//     className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\n//     type=\"text\"\n//     value={newStock.blood_status}\n//     onChange={(e) => setNewStock({ ...newStock, blood_status: e.target.value })}\n//   />\n\n//   <button\n//     type=\"submit\"\n//     className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\n//   >\n//     Add Stock\n//   </button>\n// </form>\n\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default BloodStock;","map":{"version":3,"names":[],"sources":["C:/Users/VICTUS/OneDrive/Desktop/Nexus blood_care/frontend/src/Component/Staff/DonorInventory.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import axios from 'axios';\r\n\r\n// const BloodStock = () => {\r\n//   const [stocks, setStocks] = useState([]);\r\n//   const [newStock, setNewStock] = useState({\r\n//     name: '',\r\n//     blood_group: '',\r\n//     unit: 0,\r\n//     donor_name: '',\r\n//     donation_time: '',\r\n//     blood_status: '',\r\n//   });\r\n//   const [showSuccessMessage, setShowSuccessMessage] = useState(false);\r\n\r\n//   useEffect(() => {\r\n//     getStocks();\r\n//   }, []);\r\n\r\n//   const getStocks = async () => {\r\n//     try {\r\n//       const response = await axios.get('http://localhost:5000/login/stf/bs');\r\n//       setStocks(response.data);\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   const addStock = async () => {\r\n//     try {\r\n//       await axios.post('http://localhost:5000/login/stf/bs/insert', newStock);\r\n//       getStocks();\r\n//       setNewStock({\r\n//         blood_group: '',\r\n//         unit: 0,\r\n//         donor_name: '',\r\n//         donation_time: '',\r\n//         blood_status: '',\r\n//       });\r\n//       setShowSuccessMessage(true);\r\n//       setTimeout(() => {\r\n//         setShowSuccessMessage(false);\r\n//       }, 3000); // Hide the success message after 3 seconds\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   const updateStock = async (b_id, unitUpdate) => {\r\n//     try {\r\n//       await axios.put('http://localhost:5000/login/stf/bs/update', {\r\n//         b_id,\r\n//         blood_group: '',\r\n//         unitUpdate,\r\n//         donor_name: '',\r\n//         donation_time: '',\r\n//         blood_status: '',\r\n//       });\r\n//       getStocks();\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   const deleteStock = async (id) => {\r\n//     try {\r\n//       await axios.delete(`http://localhost:5000/login/stf/bs/delete/${id}`);\r\n//       getStocks();\r\n//     } catch (error) {\r\n//       console.log(error);\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"container mx-auto p-4\">\r\n//       <h1 className=\"text-3xl font-bold my-4\">Blood Stock Management</h1>\r\n\r\n//       {showSuccessMessage && (\r\n//         <div className=\"bg-green-200 text-green-800 p-2 mb-4 rounded\">\r\n//           Stock added successfully!\r\n//         </div>\r\n//       )}\r\n\r\n// <table className=\"table-auto border-collapse border border-slate-500\">\r\n//   <thead>\r\n//     <tr>\r\n//       <th className=\"border border-slate-600 px-4 py-2\">Blood Group</th>\r\n//       <th className=\"border border-slate-600 px-4 py-2\">Donor</th>\r\n//       <th className=\"border border-slate-600 px-4 py-2\">Units</th>\r\n//       <th className=\"border border-slate-600 px-4 py-2\">Donated On</th>\r\n//       <th className=\"border border-slate-600 px-4 py-2\">Status</th>\r\n//       <th className=\"border border-slate-600 px-4 py-2\">Actions</th>\r\n//     </tr>\r\n//   </thead>\r\n//   <tbody>\r\n//     {stocks.map(stock => (\r\n//       <tr key={stock.id}>\r\n//         <td className=\"border border-slate-700 px-4 py-2\">{stock.blood_group}</td>\r\n//         <td className=\"border border-slate-700 px-4 py-2\">{stock.donor_name}</td>\r\n//         <td className=\"border border-slate-700 px-4 py-2\">{stock.unit}</td>\r\n//         <td className=\"border border-slate-700 px-4 py-2\">{stock.donation_time}</td>\r\n//         <td className=\"border border-slate-700 px-4 py-2\">{stock.blood_status}</td>\r\n//         <td className=\"border border-slate-700 px-4 py-2\">\r\n//           <button\r\n//             className=\"bg-yellow-500 px-4 py-2 rounded inline-block mr-2\"\r\n//             onClick={() => updateStock()}\r\n//           >\r\n//             updateStock\r\n//           </button>\r\n          \r\n//           <button\r\n//             className=\"bg-red-500 px-4 py-2 rounded inline-block\"\r\n//             onClick={() => deleteStock(stock.id)}  \r\n//           >\r\n//             Delete\r\n//           </button>\r\n//         </td>\r\n//       </tr>\r\n//     ))}\r\n//   </tbody>\r\n// </table>\r\n\r\n//       <div className=\"bg-white shadow-md rounded px-8 pt-6 pb-8 mb-4 mt-8\">\r\n//         <h2 className=\"text-lg font-medium mb-4\">Add Stock</h2>\r\n\r\n//         <form onSubmit={(e) => { e.preventDefault(); addStock(); }} className=\"space-y-4\">\r\n\r\n//   <label className=\"block text-gray-700 font-bold mb-2\">Blood Group:</label>\r\n//   <input\r\n//     className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n//     type=\"text\"\r\n//     value={newStock.blood_group}\r\n//     onChange={(e) => setNewStock({ ...newStock, blood_group: e.target.value })}\r\n//   />\r\n\r\n//   <label className=\"block text-gray-700 font-bold mb-2\">Unit:</label>\r\n//   <input\r\n//     className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n//     type=\"number\"\r\n//     value={newStock.unit}\r\n//     onChange={(e) => setNewStock({ ...newStock, unit: e.target.value })}\r\n//   />\r\n\r\n//   <label className=\"block text-gray-700 font-bold mb-2\">Donor Name:</label>\r\n//   <input\r\n//     className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n//     type=\"text\"\r\n//     value={newStock.donor_name}\r\n//     onChange={(e) => setNewStock({ ...newStock, donor_name: e.target.value })}\r\n//   />\r\n\r\n//   <label className=\"block text-gray-700 font-bold mb-2\">Donation Time:</label>\r\n//   <input\r\n//     className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n//     type=\"text\"\r\n//     value={newStock.donation_time}\r\n//     onChange={(e) => setNewStock({ ...newStock, donation_time: e.target.value })}\r\n//   />\r\n\r\n//   <label className=\"block text-gray-700 font-bold mb-2\">Blood Status:</label>\r\n//   <input\r\n//     className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline\"\r\n//     type=\"text\"\r\n//     value={newStock.blood_status}\r\n//     onChange={(e) => setNewStock({ ...newStock, blood_status: e.target.value })}\r\n//   />\r\n\r\n\r\n//   <button\r\n//     type=\"submit\"\r\n//     className=\"bg-blue-500 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline\"\r\n//   >\r\n//     Add Stock\r\n//   </button>\r\n// </form>\r\n\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default BloodStock;\r\n"],"mappings},"metadata":{},"sourceType":"module","externalDependencies":[]}