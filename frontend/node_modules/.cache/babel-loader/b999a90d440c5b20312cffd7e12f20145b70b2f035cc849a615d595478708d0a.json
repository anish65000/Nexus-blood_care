{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VICTUS\\\\OneDrive\\\\Desktop\\\\Nexus blood_care\\\\frontend\\\\src\\\\Component\\\\user\\\\DonorDetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PremiumDonorDetails = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [donorDetails, setDonorDetails] = useState(null);\n  useEffect(() => {\n    // Fetch donor details based on the ID from your API or server\n    fetch(`http://localhost:5000/api/donors/${id}`) // Use your specific API endpoint\n    .then(response => response.json()).then(data => setDonorDetails(data)).catch(error => console.error('Error fetching donor details:', error));\n  }, [id]); // Dependency on 'id' ensures useEffect runs when the ID changes\n\n  if (!donorDetails) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 12\n    }, this); // Add a loading indicator or handle loading state\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Donor Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"ID: \", donorDetails.premium_donor_id]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"First Name: \", donorDetails.first_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Last Name: \", donorDetails.last_name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Email: \", donorDetails.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(PremiumDonorDetails, \"akH6ptIrESIoG5PFwrEeG/5uMV8=\", false, function () {\n  return [useParams];\n});\n_c = PremiumDonorDetails;\nexport default PremiumDonorDetails;\nvar _c;\n$RefreshReg$(_c, \"PremiumDonorDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","jsxDEV","_jsxDEV","PremiumDonorDetails","_s","id","donorDetails","setDonorDetails","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","premium_donor_id","first_name","last_name","email","_c","$RefreshReg$"],"sources":["C:/Users/VICTUS/OneDrive/Desktop/Nexus blood_care/frontend/src/Component/user/DonorDetails.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst PremiumDonorDetails = () => {\r\n  const { id } = useParams();\r\n  const [donorDetails, setDonorDetails] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Fetch donor details based on the ID from your API or server\r\n    fetch(`http://localhost:5000/api/donors/${id}`)  // Use your specific API endpoint\r\n      .then(response => response.json())\r\n      .then(data => setDonorDetails(data))\r\n      .catch(error => console.error('Error fetching donor details:', error));\r\n  }, [id]); // Dependency on 'id' ensures useEffect runs when the ID changes\r\n\r\n  if (!donorDetails) {\r\n    return <p>Loading...</p>; // Add a loading indicator or handle loading state\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h2>Donor Details</h2>\r\n      <p>ID: {donorDetails.premium_donor_id}</p>\r\n      <p>First Name: {donorDetails.first_name}</p>\r\n      <p>Last Name: {donorDetails.last_name}</p>\r\n      <p>Email: {donorDetails.email}</p>\r\n      {/* Add more details based on your premium donor data */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PremiumDonorDetails;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChC,MAAM;IAAEC;EAAG,CAAC,GAAGL,SAAS,CAAC,CAAC;EAC1B,MAAM,CAACM,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd;IACAS,KAAK,CAAE,oCAAmCH,EAAG,EAAC,CAAC,CAAE;IAAA,CAC9CI,IAAI,CAACC,QAAQ,IAAIA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACjCF,IAAI,CAACG,IAAI,IAAIL,eAAe,CAACK,IAAI,CAAC,CAAC,CACnCC,KAAK,CAACC,KAAK,IAAIC,OAAO,CAACD,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC,CAAC;EAC1E,CAAC,EAAE,CAACT,EAAE,CAAC,CAAC,CAAC,CAAC;;EAEV,IAAI,CAACC,YAAY,EAAE;IACjB,oBAAOJ,OAAA;MAAAc,QAAA,EAAG;IAAU;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,CAAC,CAAC;EAC5B;EAEA,oBACElB,OAAA;IAAAc,QAAA,gBACEd,OAAA;MAAAc,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACtBlB,OAAA;MAAAc,QAAA,GAAG,MAAI,EAACV,YAAY,CAACe,gBAAgB;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1ClB,OAAA;MAAAc,QAAA,GAAG,cAAY,EAACV,YAAY,CAACgB,UAAU;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5ClB,OAAA;MAAAc,QAAA,GAAG,aAAW,EAACV,YAAY,CAACiB,SAAS;IAAA;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1ClB,OAAA;MAAAc,QAAA,GAAG,SAAO,EAACV,YAAY,CAACkB,KAAK;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE/B,CAAC;AAEV,CAAC;AAAChB,EAAA,CA1BID,mBAAmB;EAAA,QACRH,SAAS;AAAA;AAAAyB,EAAA,GADpBtB,mBAAmB;AA4BzB,eAAeA,mBAAmB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}