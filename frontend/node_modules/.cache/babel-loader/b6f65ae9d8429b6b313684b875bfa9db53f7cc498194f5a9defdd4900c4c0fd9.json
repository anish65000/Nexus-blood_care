{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VICTUS\\\\OneDrive\\\\Desktop\\\\Nexus blood_care\\\\frontend\\\\src\\\\Component\\\\Staff\\\\BloodTesting.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BloodTestForm = () => {\n  _s();\n  const [donorStockList, setDonorStockList] = useState([]);\n  const [selectedDonorIndex, setSelectedDonorIndex] = useState(null);\n  const [formValues, setFormValues] = useState({\n    generalHealth: 'good',\n    disqualifyingMedications: '',\n    recentTravel: '',\n    recentTattoos: '',\n    recentSexualActivity: '',\n    drugUse: ''\n  });\n  const [bloodTestResult, setBloodTestResult] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('http://localhost:5000/login/stf/ds');\n        setDonorStockList(response.data);\n      } catch (error) {\n        console.error('Error fetching donor stock:', error.message);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleCheckBlood = async (donorId, formValues) => {\n    try {\n      const response = await axios.post(`http://localhost:5000/login/stf/ds/test-blood/${donorId}`, formValues);\n      if (response.data.result === 'safe') {\n        console.log('Blood is safe:', response.data.donor);\n      } else {\n        console.log('Blood is unsafe:', response.data.donor);\n      }\n\n      // Fetch blood status if blood test is already performed\n      if (response.data.result !== 'safe' && response.data.result !== 'unsafe') {\n        const bloodStatusResponse = await axios.get(`http://localhost:5000/login/stf/ds/donor/${donorId}`);\n\n        // Assuming the server returns the blood status in the response\n        const bloodStatus = bloodStatusResponse.data.blood_status;\n\n        // Update donorStockList with the latest information\n        const updatedDonorStockList = donorStockList.map((donorStock, index) => {\n          if (donorStock.donor_id === donorId) {\n            setSelectedDonorIndex(index);\n            return {\n              ...donorStock,\n              blood_status: bloodStatus\n            };\n          }\n          return donorStock;\n        });\n        setDonorStockList(updatedDonorStockList);\n\n        // Set the blood test result\n        setBloodTestResult(bloodStatus);\n      } else {\n        // Update donorStockList with the latest information\n        const updatedDonorStockList = donorStockList.map((donorStock, index) => {\n          if (donorStock.donor_id === donorId) {\n            setSelectedDonorIndex(index);\n            return {\n              ...donorStock,\n              blood_status: response.data.result\n            };\n          }\n          return donorStock;\n        });\n        setDonorStockList(updatedDonorStockList);\n\n        // Set the blood test result\n        setBloodTestResult(response.data.result);\n      }\n    } catch (error) {\n      console.error('Error testing blood:', error.message);\n    }\n  };\n  const handleFormSubmit = async () => {\n    try {\n      if (selectedDonorIndex !== null) {\n        const selectedDonor = donorStockList[selectedDonorIndex];\n        await handleCheckBlood(selectedDonor.donor_id, formValues);\n        setFormValues({\n          generalHealth: 'good',\n          disqualifyingMedications: '',\n          recentTravel: '',\n          recentTattoos: '',\n          recentSexualActivity: '',\n          drugUse: ''\n        });\n      }\n    } catch (error) {\n      console.error('Error submitting form:', error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"text-3xl font-bold mb-4\",\n      children: \"Donor details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"w-full border border-collapse\",\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"bg-gray-200\",\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-2 px-4 border\",\n            children: \"Donor Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-2 px-4 border\",\n            children: \"Blood Group\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-2 px-4 border\",\n            children: \"Unit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-2 px-4 border\",\n            children: \"Blood Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            className: \"py-2 px-4 border\",\n            children: \"Actions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: donorStockList && donorStockList.length > 0 ? donorStockList.map((donorStock, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: \"hover:bg-gray-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 border\",\n            children: donorStock.donor_name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 border\",\n            children: donorStock.blood_group\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 border\",\n            children: donorStock.unit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 border\",\n            children: donorStock.blood_status !== null && donorStock.blood_status !== undefined ? donorStock.blood_status === 'safe' ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-green-600\",\n              children: \"Safe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 23\n            }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-red-600\",\n              children: \"Unsafe\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 23\n            }, this) : 'N/A'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: \"py-2 px-4 border\",\n            children: donorStock.blood_status !== null && donorStock.blood_status !== undefined ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: `Blood Test Result: ${donorStock.blood_status}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleCheckBlood(donorStock.donor_id, formValues),\n              children: \"Check Blood\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 17\n          }, this)]\n        }, donorStock.donor_id || index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: /*#__PURE__*/_jsxDEV(\"td\", {\n            colSpan: \"5\",\n            children: \"No donor stock available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), selectedDonorIndex !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Check Blood Conditions for \", donorStockList[selectedDonorIndex].donor_name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"General Health:\", /*#__PURE__*/_jsxDEV(\"select\", {\n            value: formValues.generalHealth,\n            onChange: e => setFormValues({\n              ...formValues,\n              generalHealth: e.target.value\n            }),\n            children: /*#__PURE__*/_jsxDEV(\"option\", {\n              value: \"good\",\n              children: \"Good\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Disqualifying Medications:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formValues.disqualifyingMedications,\n            onChange: e => setFormValues({\n              ...formValues,\n              disqualifyingMedications: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Recent Travel:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formValues.recentTravel,\n            onChange: e => setFormValues({\n              ...formValues,\n              recentTravel: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Recent Tattoos:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formValues.recentTattoos,\n            onChange: e => setFormValues({\n              ...formValues,\n              recentTattoos: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Recent Sexual Activity:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formValues.recentSexualActivity,\n            onChange: e => setFormValues({\n              ...formValues,\n              recentSexualActivity: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Drug Use:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: formValues.drugUse,\n            onChange: e => setFormValues({\n              ...formValues,\n              drugUse: e.target.value\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: handleFormSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 9\n    }, this), bloodTestResult && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Blood Test Result\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this), bloodTestResult === 'safe' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Blood is safe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Blood is unsafe\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(BloodTestForm, \"sfLm2O87J1KKYRF+YDtxJGXIMOU=\");\n_c = BloodTestForm;\nexport default BloodTestForm;\nvar _c;\n$RefreshReg$(_c, \"BloodTestForm\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","BloodTestForm","_s","donorStockList","setDonorStockList","selectedDonorIndex","setSelectedDonorIndex","formValues","setFormValues","generalHealth","disqualifyingMedications","recentTravel","recentTattoos","recentSexualActivity","drugUse","bloodTestResult","setBloodTestResult","fetchData","response","get","data","error","console","message","handleCheckBlood","donorId","post","result","log","donor","bloodStatusResponse","bloodStatus","blood_status","updatedDonorStockList","map","donorStock","index","donor_id","handleFormSubmit","selectedDonor","children","className","fileName","_jsxFileName","lineNumber","columnNumber","length","donor_name","blood_group","unit","undefined","onClick","colSpan","value","onChange","e","target","type","_c","$RefreshReg$"],"sources":["C:/Users/VICTUS/OneDrive/Desktop/Nexus blood_care/frontend/src/Component/Staff/BloodTesting.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst BloodTestForm = () => {\r\n  const [donorStockList, setDonorStockList] = useState([]);\r\n  const [selectedDonorIndex, setSelectedDonorIndex] = useState(null);\r\n  const [formValues, setFormValues] = useState({\r\n    generalHealth: 'good',\r\n    disqualifyingMedications: '',\r\n    recentTravel: '',\r\n    recentTattoos: '',\r\n    recentSexualActivity: '',\r\n    drugUse: '',\r\n  });\r\n  const [bloodTestResult, setBloodTestResult] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await axios.get('http://localhost:5000/login/stf/ds');\r\n        setDonorStockList(response.data);\r\n      } catch (error) {\r\n        console.error('Error fetching donor stock:', error.message);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  const handleCheckBlood = async (donorId, formValues) => {\r\n    try {\r\n      const response = await axios.post(`http://localhost:5000/login/stf/ds/test-blood/${donorId}`, formValues);\r\n\r\n      if (response.data.result === 'safe') {\r\n        console.log('Blood is safe:', response.data.donor);\r\n      } else {\r\n        console.log('Blood is unsafe:', response.data.donor);\r\n      }\r\n\r\n      // Fetch blood status if blood test is already performed\r\n      if (response.data.result !== 'safe' && response.data.result !== 'unsafe') {\r\n        const bloodStatusResponse = await axios.get(`http://localhost:5000/login/stf/ds/donor/${donorId}`);\r\n        \r\n        // Assuming the server returns the blood status in the response\r\n        const bloodStatus = bloodStatusResponse.data.blood_status;\r\n\r\n        // Update donorStockList with the latest information\r\n        const updatedDonorStockList = donorStockList.map((donorStock, index) => {\r\n          if (donorStock.donor_id === donorId) {\r\n            setSelectedDonorIndex(index);\r\n            return { ...donorStock, blood_status: bloodStatus };\r\n          }\r\n          return donorStock;\r\n        });\r\n\r\n        setDonorStockList(updatedDonorStockList);\r\n\r\n        // Set the blood test result\r\n        setBloodTestResult(bloodStatus);\r\n      } else {\r\n        // Update donorStockList with the latest information\r\n        const updatedDonorStockList = donorStockList.map((donorStock, index) => {\r\n          if (donorStock.donor_id === donorId) {\r\n            setSelectedDonorIndex(index);\r\n            return { ...donorStock, blood_status: response.data.result };\r\n          }\r\n          return donorStock;\r\n        });\r\n\r\n        setDonorStockList(updatedDonorStockList);\r\n\r\n        // Set the blood test result\r\n        setBloodTestResult(response.data.result);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error testing blood:', error.message);\r\n    }\r\n  };\r\n\r\n  const handleFormSubmit = async () => {\r\n    try {\r\n      if (selectedDonorIndex !== null) {\r\n        const selectedDonor = donorStockList[selectedDonorIndex];\r\n        await handleCheckBlood(selectedDonor.donor_id, formValues);\r\n        setFormValues({\r\n          generalHealth: 'good',\r\n          disqualifyingMedications: '',\r\n          recentTravel: '',\r\n          recentTattoos: '',\r\n          recentSexualActivity: '',\r\n          drugUse: '',\r\n        });\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting form:', error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className=\"text-3xl font-bold mb-4\">Donor details</h1>\r\n      <table className=\"w-full border border-collapse\">\r\n        <thead>\r\n          <tr className=\"bg-gray-200\">\r\n            <th className=\"py-2 px-4 border\">Donor Name</th>\r\n            <th className=\"py-2 px-4 border\">Blood Group</th>\r\n            <th className=\"py-2 px-4 border\">Unit</th>\r\n            <th className=\"py-2 px-4 border\">Blood Status</th>\r\n            <th className=\"py-2 px-4 border\">Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {donorStockList && donorStockList.length > 0 ? (\r\n            donorStockList.map((donorStock, index) => (\r\n              <tr key={donorStock.donor_id || index} className=\"hover:bg-gray-100\">\r\n                <td className=\"py-2 px-4 border\">{donorStock.donor_name}</td>\r\n                <td className=\"py-2 px-4 border\">{donorStock.blood_group}</td>\r\n                <td className=\"py-2 px-4 border\">{donorStock.unit}</td>\r\n                <td className=\"py-2 px-4 border\">\r\n                  {donorStock.blood_status !== null && donorStock.blood_status !== undefined ? (\r\n                    donorStock.blood_status === 'safe' ? (\r\n                      <span className=\"text-green-600\">Safe</span>\r\n                    ) : (\r\n                      <span className=\"text-red-600\">Unsafe</span>\r\n                    )\r\n                  ) : (\r\n                    'N/A'\r\n                  )}\r\n                </td>\r\n                <td className=\"py-2 px-4 border\">\r\n                  {donorStock.blood_status !== null && donorStock.blood_status !== undefined ? (\r\n                    <p>{`Blood Test Result: ${donorStock.blood_status}`}</p>\r\n                  ) : (\r\n                    <button onClick={() => handleCheckBlood(donorStock.donor_id, formValues)}>\r\n                      Check Blood\r\n                    </button>\r\n                  )}\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"5\">No donor stock available</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </table>\r\n\r\n      {selectedDonorIndex !== null && (\r\n        <div>\r\n          <h2>Check Blood Conditions for {donorStockList[selectedDonorIndex].donor_name}</h2>\r\n          <form>\r\n            <label>\r\n              General Health:\r\n              <select value={formValues.generalHealth} onChange={(e) => setFormValues({ ...formValues, generalHealth: e.target.value })}>\r\n                <option value=\"good\">Good</option>\r\n              </select>\r\n            </label>\r\n            <label>\r\n              Disqualifying Medications:\r\n              <input\r\n                type=\"text\"\r\n                value={formValues.disqualifyingMedications}\r\n                onChange={(e) => setFormValues({ ...formValues, disqualifyingMedications: e.target.value })}\r\n              />\r\n            </label>\r\n\r\n            <label>\r\n              Recent Travel:\r\n              <input\r\n                type=\"text\"\r\n                value={formValues.recentTravel}\r\n                onChange={(e) => setFormValues({ ...formValues, recentTravel: e.target.value })}\r\n              />\r\n            </label>\r\n\r\n            <label>\r\n              Recent Tattoos:\r\n              <input\r\n                type=\"text\"\r\n                value={formValues.recentTattoos}\r\n                onChange={(e) => setFormValues({ ...formValues, recentTattoos: e.target.value })}\r\n              />\r\n            </label>\r\n\r\n            <label>\r\n              Recent Sexual Activity:\r\n              <input\r\n                type=\"text\"\r\n                value={formValues.recentSexualActivity}\r\n                onChange={(e) => setFormValues({ ...formValues, recentSexualActivity: e.target.value })}\r\n              />\r\n            </label>\r\n\r\n            <label>\r\n              Drug Use:\r\n              <input\r\n                type=\"text\"\r\n                value={formValues.drugUse}\r\n                onChange={(e) => setFormValues({ ...formValues, drugUse: e.target.value })}\r\n              />\r\n            </label>\r\n\r\n            <button type=\"button\" onClick={handleFormSubmit}>\r\n              Submit\r\n            </button>\r\n          </form>\r\n        </div>\r\n      )}\r\n\r\n      {bloodTestResult && (\r\n        <div>\r\n          <h2>Blood Test Result</h2>\r\n          {bloodTestResult === 'safe' ? (\r\n            <p>Blood is safe</p>\r\n          ) : (\r\n            <p>Blood is unsafe</p>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BloodTestForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACS,kBAAkB,EAAEC,qBAAqB,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC;EAClE,MAAM,CAACW,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC;IAC3Ca,aAAa,EAAE,MAAM;IACrBC,wBAAwB,EAAE,EAAE;IAC5BC,YAAY,EAAE,EAAE;IAChBC,aAAa,EAAE,EAAE;IACjBC,oBAAoB,EAAE,EAAE;IACxBC,OAAO,EAAE;EACX,CAAC,CAAC;EACF,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EAE5DC,SAAS,CAAC,MAAM;IACd,MAAMoB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMpB,KAAK,CAACqB,GAAG,CAAC,oCAAoC,CAAC;QACtEf,iBAAiB,CAACc,QAAQ,CAACE,IAAI,CAAC;MAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC7D;IACF,CAAC;IAEDN,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMO,gBAAgB,GAAG,MAAAA,CAAOC,OAAO,EAAElB,UAAU,KAAK;IACtD,IAAI;MACF,MAAMW,QAAQ,GAAG,MAAMpB,KAAK,CAAC4B,IAAI,CAAE,iDAAgDD,OAAQ,EAAC,EAAElB,UAAU,CAAC;MAEzG,IAAIW,QAAQ,CAACE,IAAI,CAACO,MAAM,KAAK,MAAM,EAAE;QACnCL,OAAO,CAACM,GAAG,CAAC,gBAAgB,EAAEV,QAAQ,CAACE,IAAI,CAACS,KAAK,CAAC;MACpD,CAAC,MAAM;QACLP,OAAO,CAACM,GAAG,CAAC,kBAAkB,EAAEV,QAAQ,CAACE,IAAI,CAACS,KAAK,CAAC;MACtD;;MAEA;MACA,IAAIX,QAAQ,CAACE,IAAI,CAACO,MAAM,KAAK,MAAM,IAAIT,QAAQ,CAACE,IAAI,CAACO,MAAM,KAAK,QAAQ,EAAE;QACxE,MAAMG,mBAAmB,GAAG,MAAMhC,KAAK,CAACqB,GAAG,CAAE,4CAA2CM,OAAQ,EAAC,CAAC;;QAElG;QACA,MAAMM,WAAW,GAAGD,mBAAmB,CAACV,IAAI,CAACY,YAAY;;QAEzD;QACA,MAAMC,qBAAqB,GAAG9B,cAAc,CAAC+B,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,KAAK;UACtE,IAAID,UAAU,CAACE,QAAQ,KAAKZ,OAAO,EAAE;YACnCnB,qBAAqB,CAAC8B,KAAK,CAAC;YAC5B,OAAO;cAAE,GAAGD,UAAU;cAAEH,YAAY,EAAED;YAAY,CAAC;UACrD;UACA,OAAOI,UAAU;QACnB,CAAC,CAAC;QAEF/B,iBAAiB,CAAC6B,qBAAqB,CAAC;;QAExC;QACAjB,kBAAkB,CAACe,WAAW,CAAC;MACjC,CAAC,MAAM;QACL;QACA,MAAME,qBAAqB,GAAG9B,cAAc,CAAC+B,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,KAAK;UACtE,IAAID,UAAU,CAACE,QAAQ,KAAKZ,OAAO,EAAE;YACnCnB,qBAAqB,CAAC8B,KAAK,CAAC;YAC5B,OAAO;cAAE,GAAGD,UAAU;cAAEH,YAAY,EAAEd,QAAQ,CAACE,IAAI,CAACO;YAAO,CAAC;UAC9D;UACA,OAAOQ,UAAU;QACnB,CAAC,CAAC;QAEF/B,iBAAiB,CAAC6B,qBAAqB,CAAC;;QAExC;QACAjB,kBAAkB,CAACE,QAAQ,CAACE,IAAI,CAACO,MAAM,CAAC;MAC1C;IACF,CAAC,CAAC,OAAON,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACtD;EACF,CAAC;EAED,MAAMe,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,IAAIjC,kBAAkB,KAAK,IAAI,EAAE;QAC/B,MAAMkC,aAAa,GAAGpC,cAAc,CAACE,kBAAkB,CAAC;QACxD,MAAMmB,gBAAgB,CAACe,aAAa,CAACF,QAAQ,EAAE9B,UAAU,CAAC;QAC1DC,aAAa,CAAC;UACZC,aAAa,EAAE,MAAM;UACrBC,wBAAwB,EAAE,EAAE;UAC5BC,YAAY,EAAE,EAAE;UAChBC,aAAa,EAAE,EAAE;UACjBC,oBAAoB,EAAE,EAAE;UACxBC,OAAO,EAAE;QACX,CAAC,CAAC;MACJ;IACF,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAACE,OAAO,CAAC;IACxD;EACF,CAAC;EAED,oBACEvB,OAAA;IAAAwC,QAAA,gBACExC,OAAA;MAAIyC,SAAS,EAAC,yBAAyB;MAAAD,QAAA,EAAC;IAAa;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1D7C,OAAA;MAAOyC,SAAS,EAAC,+BAA+B;MAAAD,QAAA,gBAC9CxC,OAAA;QAAAwC,QAAA,eACExC,OAAA;UAAIyC,SAAS,EAAC,aAAa;UAAAD,QAAA,gBACzBxC,OAAA;YAAIyC,SAAS,EAAC,kBAAkB;YAAAD,QAAA,EAAC;UAAU;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAChD7C,OAAA;YAAIyC,SAAS,EAAC,kBAAkB;YAAAD,QAAA,EAAC;UAAW;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACjD7C,OAAA;YAAIyC,SAAS,EAAC,kBAAkB;YAAAD,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1C7C,OAAA;YAAIyC,SAAS,EAAC,kBAAkB;YAAAD,QAAA,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAClD7C,OAAA;YAAIyC,SAAS,EAAC,kBAAkB;YAAAD,QAAA,EAAC;UAAO;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACR7C,OAAA;QAAAwC,QAAA,EACGrC,cAAc,IAAIA,cAAc,CAAC2C,MAAM,GAAG,CAAC,GAC1C3C,cAAc,CAAC+B,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBACnCpC,OAAA;UAAuCyC,SAAS,EAAC,mBAAmB;UAAAD,QAAA,gBAClExC,OAAA;YAAIyC,SAAS,EAAC,kBAAkB;YAAAD,QAAA,EAAEL,UAAU,CAACY;UAAU;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC7D7C,OAAA;YAAIyC,SAAS,EAAC,kBAAkB;YAAAD,QAAA,EAAEL,UAAU,CAACa;UAAW;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eAC9D7C,OAAA;YAAIyC,SAAS,EAAC,kBAAkB;YAAAD,QAAA,EAAEL,UAAU,CAACc;UAAI;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACvD7C,OAAA;YAAIyC,SAAS,EAAC,kBAAkB;YAAAD,QAAA,EAC7BL,UAAU,CAACH,YAAY,KAAK,IAAI,IAAIG,UAAU,CAACH,YAAY,KAAKkB,SAAS,GACxEf,UAAU,CAACH,YAAY,KAAK,MAAM,gBAChChC,OAAA;cAAMyC,SAAS,EAAC,gBAAgB;cAAAD,QAAA,EAAC;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,gBAE5C7C,OAAA;cAAMyC,SAAS,EAAC,cAAc;cAAAD,QAAA,EAAC;YAAM;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAC5C,GAED;UACD;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eACL7C,OAAA;YAAIyC,SAAS,EAAC,kBAAkB;YAAAD,QAAA,EAC7BL,UAAU,CAACH,YAAY,KAAK,IAAI,IAAIG,UAAU,CAACH,YAAY,KAAKkB,SAAS,gBACxElD,OAAA;cAAAwC,QAAA,EAAK,sBAAqBL,UAAU,CAACH,YAAa;YAAC;cAAAU,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,gBAExD7C,OAAA;cAAQmD,OAAO,EAAEA,CAAA,KAAM3B,gBAAgB,CAACW,UAAU,CAACE,QAAQ,EAAE9B,UAAU,CAAE;cAAAiC,QAAA,EAAC;YAE1E;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UACT;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC;QAAA,GAvBEV,UAAU,CAACE,QAAQ,IAAID,KAAK;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAwBjC,CACL,CAAC,gBAEF7C,OAAA;UAAAwC,QAAA,eACExC,OAAA;YAAIoD,OAAO,EAAC,GAAG;YAAAZ,QAAA,EAAC;UAAwB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3C;MACL;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,EAEPxC,kBAAkB,KAAK,IAAI,iBAC1BL,OAAA;MAAAwC,QAAA,gBACExC,OAAA;QAAAwC,QAAA,GAAI,6BAA2B,EAACrC,cAAc,CAACE,kBAAkB,CAAC,CAAC0C,UAAU;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACnF7C,OAAA;QAAAwC,QAAA,gBACExC,OAAA;UAAAwC,QAAA,GAAO,iBAEL,eAAAxC,OAAA;YAAQqD,KAAK,EAAE9C,UAAU,CAACE,aAAc;YAAC6C,QAAQ,EAAGC,CAAC,IAAK/C,aAAa,CAAC;cAAE,GAAGD,UAAU;cAAEE,aAAa,EAAE8C,CAAC,CAACC,MAAM,CAACH;YAAM,CAAC,CAAE;YAAAb,QAAA,eACxHxC,OAAA;cAAQqD,KAAK,EAAC,MAAM;cAAAb,QAAA,EAAC;YAAI;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACJ,CAAC,eACR7C,OAAA;UAAAwC,QAAA,GAAO,4BAEL,eAAAxC,OAAA;YACEyD,IAAI,EAAC,MAAM;YACXJ,KAAK,EAAE9C,UAAU,CAACG,wBAAyB;YAC3C4C,QAAQ,EAAGC,CAAC,IAAK/C,aAAa,CAAC;cAAE,GAAGD,UAAU;cAAEG,wBAAwB,EAAE6C,CAAC,CAACC,MAAM,CAACH;YAAM,CAAC;UAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7F,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eAER7C,OAAA;UAAAwC,QAAA,GAAO,gBAEL,eAAAxC,OAAA;YACEyD,IAAI,EAAC,MAAM;YACXJ,KAAK,EAAE9C,UAAU,CAACI,YAAa;YAC/B2C,QAAQ,EAAGC,CAAC,IAAK/C,aAAa,CAAC;cAAE,GAAGD,UAAU;cAAEI,YAAY,EAAE4C,CAAC,CAACC,MAAM,CAACH;YAAM,CAAC;UAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eAER7C,OAAA;UAAAwC,QAAA,GAAO,iBAEL,eAAAxC,OAAA;YACEyD,IAAI,EAAC,MAAM;YACXJ,KAAK,EAAE9C,UAAU,CAACK,aAAc;YAChC0C,QAAQ,EAAGC,CAAC,IAAK/C,aAAa,CAAC;cAAE,GAAGD,UAAU;cAAEK,aAAa,EAAE2C,CAAC,CAACC,MAAM,CAACH;YAAM,CAAC;UAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAClF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eAER7C,OAAA;UAAAwC,QAAA,GAAO,yBAEL,eAAAxC,OAAA;YACEyD,IAAI,EAAC,MAAM;YACXJ,KAAK,EAAE9C,UAAU,CAACM,oBAAqB;YACvCyC,QAAQ,EAAGC,CAAC,IAAK/C,aAAa,CAAC;cAAE,GAAGD,UAAU;cAAEM,oBAAoB,EAAE0C,CAAC,CAACC,MAAM,CAACH;YAAM,CAAC;UAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzF,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eAER7C,OAAA;UAAAwC,QAAA,GAAO,WAEL,eAAAxC,OAAA;YACEyD,IAAI,EAAC,MAAM;YACXJ,KAAK,EAAE9C,UAAU,CAACO,OAAQ;YAC1BwC,QAAQ,EAAGC,CAAC,IAAK/C,aAAa,CAAC;cAAE,GAAGD,UAAU;cAAEO,OAAO,EAAEyC,CAAC,CAACC,MAAM,CAACH;YAAM,CAAC;UAAE;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5E,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG,CAAC,eAER7C,OAAA;UAAQyD,IAAI,EAAC,QAAQ;UAACN,OAAO,EAAEb,gBAAiB;UAAAE,QAAA,EAAC;QAEjD;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACN,EAEA9B,eAAe,iBACdf,OAAA;MAAAwC,QAAA,gBACExC,OAAA;QAAAwC,QAAA,EAAI;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACzB9B,eAAe,KAAK,MAAM,gBACzBf,OAAA;QAAAwC,QAAA,EAAG;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,gBAEpB7C,OAAA;QAAAwC,QAAA,EAAG;MAAe;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CACtB;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAC3C,EAAA,CA3NID,aAAa;AAAAyD,EAAA,GAAbzD,aAAa;AA6NnB,eAAeA,aAAa;AAAC,IAAAyD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}